require '_h2ph_pre.ph';

no warnings qw(redefine misc);

unless(defined(&_SYS_FBIO_H_)) {
    eval 'sub _SYS_FBIO_H_ () {1;}' unless defined(&_SYS_FBIO_H_);
    unless(defined(&_KERNEL)) {
	require 'sys/types.ph';
    } else {
	require 'sys/param.ph';
	require 'sys/systm.ph';
	require 'sys/eventhandler.ph';
    }
    require 'sys/ioccom.ph';
    eval 'sub FBTYPE_SUN1BW () {0;}' unless defined(&FBTYPE_SUN1BW);
    eval 'sub FBTYPE_SUN1COLOR () {1;}' unless defined(&FBTYPE_SUN1COLOR);
    eval 'sub FBTYPE_SUN2BW () {2;}' unless defined(&FBTYPE_SUN2BW);
    eval 'sub FBTYPE_SUN2COLOR () {3;}' unless defined(&FBTYPE_SUN2COLOR);
    eval 'sub FBTYPE_SUN2GP () {4;}' unless defined(&FBTYPE_SUN2GP);
    eval 'sub FBTYPE_SUN5COLOR () {5;}' unless defined(&FBTYPE_SUN5COLOR);
    eval 'sub FBTYPE_SUN3COLOR () {6;}' unless defined(&FBTYPE_SUN3COLOR);
    eval 'sub FBTYPE_MEMCOLOR () {7;}' unless defined(&FBTYPE_MEMCOLOR);
    eval 'sub FBTYPE_SUN4COLOR () {8;}' unless defined(&FBTYPE_SUN4COLOR);
    eval 'sub FBTYPE_NOTSUN1 () {9;}' unless defined(&FBTYPE_NOTSUN1);
    eval 'sub FBTYPE_NOTSUN2 () {10;}' unless defined(&FBTYPE_NOTSUN2);
    eval 'sub FBTYPE_PCIMISC () {11;}' unless defined(&FBTYPE_PCIMISC);
    eval 'sub FBTYPE_SUNFAST_COLOR () {12;}' unless defined(&FBTYPE_SUNFAST_COLOR);
    eval 'sub FBTYPE_SUNROP_COLOR () {13;}' unless defined(&FBTYPE_SUNROP_COLOR);
    eval 'sub FBTYPE_SUNFB_VIDEO () {14;}' unless defined(&FBTYPE_SUNFB_VIDEO);
    eval 'sub FBTYPE_RESERVED5 () {15;}' unless defined(&FBTYPE_RESERVED5);
    eval 'sub FBTYPE_RESERVED4 () {16;}' unless defined(&FBTYPE_RESERVED4);
    eval 'sub FBTYPE_SUNGP3 () {17;}' unless defined(&FBTYPE_SUNGP3);
    eval 'sub FBTYPE_SUNGT () {18;}' unless defined(&FBTYPE_SUNGT);
    eval 'sub FBTYPE_SUNLEO () {19;}' unless defined(&FBTYPE_SUNLEO);
    eval 'sub FBTYPE_MDA () {20;}' unless defined(&FBTYPE_MDA);
    eval 'sub FBTYPE_HERCULES () {21;}' unless defined(&FBTYPE_HERCULES);
    eval 'sub FBTYPE_CGA () {22;}' unless defined(&FBTYPE_CGA);
    eval 'sub FBTYPE_EGA () {23;}' unless defined(&FBTYPE_EGA);
    eval 'sub FBTYPE_VGA () {24;}' unless defined(&FBTYPE_VGA);
    eval 'sub FBTYPE_PC98 () {25;}' unless defined(&FBTYPE_PC98);
    eval 'sub FBTYPE_TGA () {26;}' unless defined(&FBTYPE_TGA);
    eval 'sub FBTYPE_TGA2 () {27;}' unless defined(&FBTYPE_TGA2);
    eval 'sub FBTYPE_MDICOLOR () {28;}' unless defined(&FBTYPE_MDICOLOR);
    eval 'sub FBTYPE_TCXCOLOR () {29;}' unless defined(&FBTYPE_TCXCOLOR);
    eval 'sub FBTYPE_CREATOR () {30;}' unless defined(&FBTYPE_CREATOR);
    eval 'sub FBTYPE_LASTPLUSONE () {31;}' unless defined(&FBTYPE_LASTPLUSONE);
    eval 'sub FBIOGTYPE () { &_IOR(ord(\'F\'), 0, \'struct fbtype\');}' unless defined(&FBIOGTYPE);
    eval 'sub FBTYPE_GET_STRIDE {
        my($_fb) = @_;
	    eval q((($_fb)-> &fb_size / ($_fb)-> &fb_height));
    }' unless defined(&FBTYPE_GET_STRIDE);
    eval 'sub FBTYPE_GET_BPP {
        my($_fb) = @_;
	    eval q((($_fb)-> &fb_bpp));
    }' unless defined(&FBTYPE_GET_BPP);
    eval 'sub FBTYPE_GET_BYTESPP {
        my($_fb) = @_;
	    eval q((($_fb)-> &fb_bpp / 8));
    }' unless defined(&FBTYPE_GET_BYTESPP);
    if(defined(&_KERNEL)) {
	eval 'sub FB_FLAG_NOMMAP () {1;}' unless defined(&FB_FLAG_NOMMAP);
	eval 'sub register_framebuffer {
	    my($info) = @_;
    	    eval q({  &EVENTHANDLER_INVOKE( &register_framebuffer, $info); (0); });
	}' unless defined(&register_framebuffer);
	eval 'sub unregister_framebuffer {
	    my($info) = @_;
    	    eval q({  &EVENTHANDLER_INVOKE( &unregister_framebuffer, $info); (0); });
	}' unless defined(&unregister_framebuffer);
    }
    if(defined(&notdef)) {
	eval 'sub FBIOGINFO () { &_IOR(ord(\'F\'), 2, \'struct fbinfo\');}' unless defined(&FBIOGINFO);
    }
    eval 'sub FBIOPUTCMAP () { &_IOW(ord(\'F\'), 3, \'struct fbcmap\');}' unless defined(&FBIOPUTCMAP);
    eval 'sub FBIOGETCMAP () { &_IOW(ord(\'F\'), 4, \'struct fbcmap\');}' unless defined(&FBIOGETCMAP);
    eval 'sub FB_ATTR_NDEVSPECIFIC () {8;}' unless defined(&FB_ATTR_NDEVSPECIFIC);
    eval 'sub FB_ATTR_NEMUTYPES () {4;}' unless defined(&FB_ATTR_NEMUTYPES);
    eval 'sub FB_ATTR_AUTOINIT () {1;}' unless defined(&FB_ATTR_AUTOINIT);
    eval 'sub FB_ATTR_DEVSPECIFIC () {2;}' unless defined(&FB_ATTR_DEVSPECIFIC);
    eval 'sub FBIOSATTR () { &_IOW(ord(\'F\'), 5, \'struct fbsattr\');}' unless defined(&FBIOSATTR);
    eval 'sub FBIOGATTR () { &_IOR(ord(\'F\'), 6, \'struct fbgattr\');}' unless defined(&FBIOGATTR);
    eval 'sub FBVIDEO_OFF () {0;}' unless defined(&FBVIDEO_OFF);
    eval 'sub FBVIDEO_ON () {1;}' unless defined(&FBVIDEO_ON);
    eval 'sub FBIOSVIDEO () { &_IOW(ord(\'F\'), 7, \'int\');}' unless defined(&FBIOSVIDEO);
    eval 'sub FBIOGVIDEO () { &_IOR(ord(\'F\'), 8, \'int\');}' unless defined(&FBIOGVIDEO);
    eval 'sub FBIOVERTICAL () { &_IO(ord(\'F\'), 9);}' unless defined(&FBIOVERTICAL);
    eval 'sub FB_CUR_SETCUR () {0x1;}' unless defined(&FB_CUR_SETCUR);
    eval 'sub FB_CUR_SETPOS () {0x2;}' unless defined(&FB_CUR_SETPOS);
    eval 'sub FB_CUR_SETHOT () {0x4;}' unless defined(&FB_CUR_SETHOT);
    eval 'sub FB_CUR_SETCMAP () {0x8;}' unless defined(&FB_CUR_SETCMAP);
    eval 'sub FB_CUR_SETSHAPE () {0x10;}' unless defined(&FB_CUR_SETSHAPE);
    eval 'sub FB_CUR_SETALL () {( &FB_CUR_SETCUR |  &FB_CUR_SETPOS |  &FB_CUR_SETHOT |  &FB_CUR_SETCMAP |  &FB_CUR_SETSHAPE);}' unless defined(&FB_CUR_SETALL);
    eval 'sub FBIOSCURSOR () { &_IOW(ord(\'F\'), 24, \'struct fbcursor\');}' unless defined(&FBIOSCURSOR);
    eval 'sub FBIOGCURSOR () { &_IOWR(ord(\'F\'), 25, \'struct fbcursor\');}' unless defined(&FBIOGCURSOR);
    eval 'sub FBIOSCURPOS () { &_IOW(ord(\'F\'), 26, \'struct fbcurpos\');}' unless defined(&FBIOSCURPOS);
    eval 'sub FBIOGCURPOS () { &_IOW(ord(\'F\'), 27, \'struct fbcurpos\');}' unless defined(&FBIOGCURPOS);
    eval 'sub FBIOGCURMAX () { &_IOR(ord(\'F\'), 28, \'struct fbcurpos\');}' unless defined(&FBIOGCURMAX);
    eval 'sub FBIOGXINFO () { &_IOR(ord(\'F\'), 39, \'struct brd_info\');}' unless defined(&FBIOGXINFO);
    eval 'sub MON_TYPE_STEREO () {0x8;}' unless defined(&MON_TYPE_STEREO);
    eval 'sub MON_TYPE_0_OFFSET () {0x4;}' unless defined(&MON_TYPE_0_OFFSET);
    eval 'sub MON_TYPE_OVERSCAN () {0x2;}' unless defined(&MON_TYPE_OVERSCAN);
    eval 'sub MON_TYPE_GRAY () {0x1;}' unless defined(&MON_TYPE_GRAY);
    eval 'sub FBIOMONINFO () { &_IOR(ord(\'F\'), 40, \'struct mon_info\');}' unless defined(&FBIOMONINFO);
    eval 'sub FB_CMAP_BLOCK () {(1<< 0);}' unless defined(&FB_CMAP_BLOCK);
    eval 'sub FB_CMAP_KERNEL () {(1<< 1);}' unless defined(&FB_CMAP_KERNEL);
    eval 'sub FBIOPUTCMAPI () { &_IOW(ord(\'F\'), 41, \'struct fbcmap_i\');}' unless defined(&FBIOPUTCMAPI);
    eval 'sub FBIOGETCMAPI () { &_IOW(ord(\'F\'), 42, \'struct fbcmap_i\');}' unless defined(&FBIOGETCMAPI);
    eval 'sub V_INFO_COLOR () {(1<< 0);}' unless defined(&V_INFO_COLOR);
    eval 'sub V_INFO_GRAPHICS () {(1<< 1);}' unless defined(&V_INFO_GRAPHICS);
    eval 'sub V_INFO_LINEAR () {(1<< 2);}' unless defined(&V_INFO_LINEAR);
    eval 'sub V_INFO_VESA () {(1<< 3);}' unless defined(&V_INFO_VESA);
    eval 'sub V_INFO_NONVGA () {(1<< 4);}' unless defined(&V_INFO_NONVGA);
    eval 'sub V_INFO_MM_OTHER () {(-1);}' unless defined(&V_INFO_MM_OTHER);
    eval 'sub V_INFO_MM_TEXT () {0;}' unless defined(&V_INFO_MM_TEXT);
    eval 'sub V_INFO_MM_PLANAR () {1;}' unless defined(&V_INFO_MM_PLANAR);
    eval 'sub V_INFO_MM_PACKED () {2;}' unless defined(&V_INFO_MM_PACKED);
    eval 'sub V_INFO_MM_DIRECT () {3;}' unless defined(&V_INFO_MM_DIRECT);
    eval 'sub V_INFO_MM_CGA () {100;}' unless defined(&V_INFO_MM_CGA);
    eval 'sub V_INFO_MM_HGC () {101;}' unless defined(&V_INFO_MM_HGC);
    eval 'sub V_INFO_MM_VGAX () {102;}' unless defined(&V_INFO_MM_VGAX);
    eval 'sub KD_OTHER () {0;}' unless defined(&KD_OTHER);
    eval 'sub KD_MONO () {1;}' unless defined(&KD_MONO);
    eval 'sub KD_HERCULES () {2;}' unless defined(&KD_HERCULES);
    eval 'sub KD_CGA () {3;}' unless defined(&KD_CGA);
    eval 'sub KD_EGA () {4;}' unless defined(&KD_EGA);
    eval 'sub KD_VGA () {5;}' unless defined(&KD_VGA);
    eval 'sub KD_PC98 () {6;}' unless defined(&KD_PC98);
    eval 'sub KD_TGA () {7;}' unless defined(&KD_TGA);
    eval 'sub KD_TGA2 () {8;}' unless defined(&KD_TGA2);
    eval 'sub V_ADP_COLOR () {(1<< 0);}' unless defined(&V_ADP_COLOR);
    eval 'sub V_ADP_MODECHANGE () {(1<< 1);}' unless defined(&V_ADP_MODECHANGE);
    eval 'sub V_ADP_STATESAVE () {(1<< 2);}' unless defined(&V_ADP_STATESAVE);
    eval 'sub V_ADP_STATELOAD () {(1<< 3);}' unless defined(&V_ADP_STATELOAD);
    eval 'sub V_ADP_FONT () {(1<< 4);}' unless defined(&V_ADP_FONT);
    eval 'sub V_ADP_PALETTE () {(1<< 5);}' unless defined(&V_ADP_PALETTE);
    eval 'sub V_ADP_BORDER () {(1<< 6);}' unless defined(&V_ADP_BORDER);
    eval 'sub V_ADP_VESA () {(1<< 7);}' unless defined(&V_ADP_VESA);
    eval 'sub V_ADP_BOOTDISPLAY () {(1<< 8);}' unless defined(&V_ADP_BOOTDISPLAY);
    eval 'sub V_ADP_PROBED () {(1<< 16);}' unless defined(&V_ADP_PROBED);
    eval 'sub V_ADP_INITIALIZED () {(1<< 17);}' unless defined(&V_ADP_INITIALIZED);
    eval 'sub V_ADP_REGISTERED () {(1<< 18);}' unless defined(&V_ADP_REGISTERED);
    eval 'sub V_ADP_ATTACHED () {(1<< 19);}' unless defined(&V_ADP_ATTACHED);
    eval 'sub V_ADP_DAC8 () {(1<< 20);}' unless defined(&V_ADP_DAC8);
    eval 'sub V_ADP_PRIMARY () {0;}' unless defined(&V_ADP_PRIMARY);
    eval 'sub V_ADP_SECONDARY () {1;}' unless defined(&V_ADP_SECONDARY);
    eval 'sub M_B40x25 () {0;}' unless defined(&M_B40x25);
    eval 'sub M_C40x25 () {1;}' unless defined(&M_C40x25);
    eval 'sub M_B80x25 () {2;}' unless defined(&M_B80x25);
    eval 'sub M_C80x25 () {3;}' unless defined(&M_C80x25);
    eval 'sub M_BG320 () {4;}' unless defined(&M_BG320);
    eval 'sub M_CG320 () {5;}' unless defined(&M_CG320);
    eval 'sub M_BG640 () {6;}' unless defined(&M_BG640);
    eval 'sub M_EGAMONO80x25 () {7;}' unless defined(&M_EGAMONO80x25);
    eval 'sub M_CG320_D () {13;}' unless defined(&M_CG320_D);
    eval 'sub M_CG640_E () {14;}' unless defined(&M_CG640_E);
    eval 'sub M_EGAMONOAPA () {15;}' unless defined(&M_EGAMONOAPA);
    eval 'sub M_CG640x350 () {16;}' unless defined(&M_CG640x350);
    eval 'sub M_ENHMONOAPA2 () {17;}' unless defined(&M_ENHMONOAPA2);
    eval 'sub M_ENH_CG640 () {18;}' unless defined(&M_ENH_CG640);
    eval 'sub M_ENH_B40x25 () {19;}' unless defined(&M_ENH_B40x25);
    eval 'sub M_ENH_C40x25 () {20;}' unless defined(&M_ENH_C40x25);
    eval 'sub M_ENH_B80x25 () {21;}' unless defined(&M_ENH_B80x25);
    eval 'sub M_ENH_C80x25 () {22;}' unless defined(&M_ENH_C80x25);
    eval 'sub M_VGA_C40x25 () {23;}' unless defined(&M_VGA_C40x25);
    eval 'sub M_VGA_C80x25 () {24;}' unless defined(&M_VGA_C80x25);
    eval 'sub M_VGA_M80x25 () {25;}' unless defined(&M_VGA_M80x25);
    eval 'sub M_VGA11 () {26;}' unless defined(&M_VGA11);
    eval 'sub M_BG640x480 () {26;}' unless defined(&M_BG640x480);
    eval 'sub M_VGA12 () {27;}' unless defined(&M_VGA12);
    eval 'sub M_CG640x480 () {27;}' unless defined(&M_CG640x480);
    eval 'sub M_VGA13 () {28;}' unless defined(&M_VGA13);
    eval 'sub M_VGA_CG320 () {28;}' unless defined(&M_VGA_CG320);
    eval 'sub M_VGA_C80x50 () {30;}' unless defined(&M_VGA_C80x50);
    eval 'sub M_VGA_M80x50 () {31;}' unless defined(&M_VGA_M80x50);
    eval 'sub M_VGA_C80x30 () {32;}' unless defined(&M_VGA_C80x30);
    eval 'sub M_VGA_M80x30 () {33;}' unless defined(&M_VGA_M80x30);
    eval 'sub M_VGA_C80x60 () {34;}' unless defined(&M_VGA_C80x60);
    eval 'sub M_VGA_M80x60 () {35;}' unless defined(&M_VGA_M80x60);
    eval 'sub M_VGA_CG640 () {36;}' unless defined(&M_VGA_CG640);
    eval 'sub M_VGA_MODEX () {37;}' unless defined(&M_VGA_MODEX);
    eval 'sub M_VGA_C90x25 () {40;}' unless defined(&M_VGA_C90x25);
    eval 'sub M_VGA_M90x25 () {41;}' unless defined(&M_VGA_M90x25);
    eval 'sub M_VGA_C90x30 () {42;}' unless defined(&M_VGA_C90x30);
    eval 'sub M_VGA_M90x30 () {43;}' unless defined(&M_VGA_M90x30);
    eval 'sub M_VGA_C90x43 () {44;}' unless defined(&M_VGA_C90x43);
    eval 'sub M_VGA_M90x43 () {45;}' unless defined(&M_VGA_M90x43);
    eval 'sub M_VGA_C90x50 () {46;}' unless defined(&M_VGA_C90x50);
    eval 'sub M_VGA_M90x50 () {47;}' unless defined(&M_VGA_M90x50);
    eval 'sub M_VGA_C90x60 () {48;}' unless defined(&M_VGA_C90x60);
    eval 'sub M_VGA_M90x60 () {49;}' unless defined(&M_VGA_M90x60);
    eval 'sub M_ENH_B80x43 () {0x70;}' unless defined(&M_ENH_B80x43);
    eval 'sub M_ENH_C80x43 () {0x71;}' unless defined(&M_ENH_C80x43);
    eval 'sub M_PC98_80x25 () {98;}' unless defined(&M_PC98_80x25);
    eval 'sub M_PC98_80x30 () {99;}' unless defined(&M_PC98_80x30);
    eval 'sub M_PC98_EGC640x400 () {100;}' unless defined(&M_PC98_EGC640x400);
    eval 'sub M_PC98_PEGC640x400 () {101;}' unless defined(&M_PC98_PEGC640x400);
    eval 'sub M_PC98_PEGC640x480 () {102;}' unless defined(&M_PC98_PEGC640x480);
    eval 'sub M_HGC_P0 () {0xe0;}' unless defined(&M_HGC_P0);
    eval 'sub M_HGC_P1 () {0xe1;}' unless defined(&M_HGC_P1);
    eval 'sub M_MCA_MODE () {0xff;}' unless defined(&M_MCA_MODE);
    eval 'sub M_TEXT_80x25 () {200;}' unless defined(&M_TEXT_80x25);
    eval 'sub M_TEXT_80x30 () {201;}' unless defined(&M_TEXT_80x30);
    eval 'sub M_TEXT_80x43 () {202;}' unless defined(&M_TEXT_80x43);
    eval 'sub M_TEXT_80x50 () {203;}' unless defined(&M_TEXT_80x50);
    eval 'sub M_TEXT_80x60 () {204;}' unless defined(&M_TEXT_80x60);
    eval 'sub M_TEXT_132x25 () {205;}' unless defined(&M_TEXT_132x25);
    eval 'sub M_TEXT_132x30 () {206;}' unless defined(&M_TEXT_132x30);
    eval 'sub M_TEXT_132x43 () {207;}' unless defined(&M_TEXT_132x43);
    eval 'sub M_TEXT_132x50 () {208;}' unless defined(&M_TEXT_132x50);
    eval 'sub M_TEXT_132x60 () {209;}' unless defined(&M_TEXT_132x60);
    eval 'sub M_VESA_BASE () {0x100;}' unless defined(&M_VESA_BASE);
    eval 'sub M_VESA_CG640x400 () {0x100;}' unless defined(&M_VESA_CG640x400);
    eval 'sub M_VESA_CG640x480 () {0x101;}' unless defined(&M_VESA_CG640x480);
    eval 'sub M_VESA_800x600 () {0x102;}' unless defined(&M_VESA_800x600);
    eval 'sub M_VESA_CG800x600 () {0x103;}' unless defined(&M_VESA_CG800x600);
    eval 'sub M_VESA_1024x768 () {0x104;}' unless defined(&M_VESA_1024x768);
    eval 'sub M_VESA_CG1024x768 () {0x105;}' unless defined(&M_VESA_CG1024x768);
    eval 'sub M_VESA_1280x1024 () {0x106;}' unless defined(&M_VESA_1280x1024);
    eval 'sub M_VESA_CG1280x1024 () {0x107;}' unless defined(&M_VESA_CG1280x1024);
    eval 'sub M_VESA_C80x60 () {0x108;}' unless defined(&M_VESA_C80x60);
    eval 'sub M_VESA_C132x25 () {0x109;}' unless defined(&M_VESA_C132x25);
    eval 'sub M_VESA_C132x43 () {0x10a;}' unless defined(&M_VESA_C132x43);
    eval 'sub M_VESA_C132x50 () {0x10b;}' unless defined(&M_VESA_C132x50);
    eval 'sub M_VESA_C132x60 () {0x10c;}' unless defined(&M_VESA_C132x60);
    eval 'sub M_VESA_32K_320 () {0x10d;}' unless defined(&M_VESA_32K_320);
    eval 'sub M_VESA_64K_320 () {0x10e;}' unless defined(&M_VESA_64K_320);
    eval 'sub M_VESA_FULL_320 () {0x10f;}' unless defined(&M_VESA_FULL_320);
    eval 'sub M_VESA_32K_640 () {0x110;}' unless defined(&M_VESA_32K_640);
    eval 'sub M_VESA_64K_640 () {0x111;}' unless defined(&M_VESA_64K_640);
    eval 'sub M_VESA_FULL_640 () {0x112;}' unless defined(&M_VESA_FULL_640);
    eval 'sub M_VESA_32K_800 () {0x113;}' unless defined(&M_VESA_32K_800);
    eval 'sub M_VESA_64K_800 () {0x114;}' unless defined(&M_VESA_64K_800);
    eval 'sub M_VESA_FULL_800 () {0x115;}' unless defined(&M_VESA_FULL_800);
    eval 'sub M_VESA_32K_1024 () {0x116;}' unless defined(&M_VESA_32K_1024);
    eval 'sub M_VESA_64K_1024 () {0x117;}' unless defined(&M_VESA_64K_1024);
    eval 'sub M_VESA_FULL_1024 () {0x118;}' unless defined(&M_VESA_FULL_1024);
    eval 'sub M_VESA_32K_1280 () {0x119;}' unless defined(&M_VESA_32K_1280);
    eval 'sub M_VESA_64K_1280 () {0x11a;}' unless defined(&M_VESA_64K_1280);
    eval 'sub M_VESA_FULL_1280 () {0x11b;}' unless defined(&M_VESA_FULL_1280);
    eval 'sub M_VESA_MODE_MAX () {0x1ff;}' unless defined(&M_VESA_MODE_MAX);
    eval 'sub FBIO_ADAPTER () { &_IOR(ord(\'F\'), 100, \'int\');}' unless defined(&FBIO_ADAPTER);
    eval 'sub FBIO_ADPTYPE () { &_IOR(ord(\'F\'), 101, \'int\');}' unless defined(&FBIO_ADPTYPE);
    eval 'sub FBIO_ADPINFO () { &_IOR(ord(\'F\'), 102, \'struct video_adapter_info\');}' unless defined(&FBIO_ADPINFO);
    eval 'sub FBIO_MODEINFO () { &_IOWR(ord(\'F\'), 103, \'struct video_info\');}' unless defined(&FBIO_MODEINFO);
    eval 'sub FBIO_FINDMODE () { &_IOWR(ord(\'F\'), 104, \'struct video_info\');}' unless defined(&FBIO_FINDMODE);
    eval 'sub FBIO_GETMODE () { &_IOR(ord(\'F\'), 105, \'int\');}' unless defined(&FBIO_GETMODE);
    eval 'sub FBIO_SETMODE () { &_IOW(ord(\'F\'), 106, \'int\');}' unless defined(&FBIO_SETMODE);
    eval 'sub FBIO_GETWINORG () { &_IOR(ord(\'F\'), 107, \'u_int\');}' unless defined(&FBIO_GETWINORG);
    eval 'sub FBIO_SETWINORG () { &_IOW(ord(\'F\'), 108, \'u_int\');}' unless defined(&FBIO_SETWINORG);
    eval 'sub FBIO_GETDISPSTART () { &_IOR(ord(\'F\'), 109,  &video_display_start_t);}' unless defined(&FBIO_GETDISPSTART);
    eval 'sub FBIO_SETDISPSTART () { &_IOW(ord(\'F\'), 110,  &video_display_start_t);}' unless defined(&FBIO_SETDISPSTART);
    eval 'sub FBIO_GETLINEWIDTH () { &_IOR(ord(\'F\'), 111, \'u_int\');}' unless defined(&FBIO_GETLINEWIDTH);
    eval 'sub FBIO_SETLINEWIDTH () { &_IOW(ord(\'F\'), 112, \'u_int\');}' unless defined(&FBIO_SETLINEWIDTH);
    eval 'sub FBIO_GETPALETTE () { &_IOW(ord(\'F\'), 113,  &video_color_palette_t);}' unless defined(&FBIO_GETPALETTE);
    eval 'sub FBIO_SETPALETTE () { &_IOW(ord(\'F\'), 114,  &video_color_palette_t);}' unless defined(&FBIO_SETPALETTE);
    eval 'sub V_DISPLAY_ON () {0;}' unless defined(&V_DISPLAY_ON);
    eval 'sub V_DISPLAY_BLANK () {1;}' unless defined(&V_DISPLAY_BLANK);
    eval 'sub V_DISPLAY_STAND_BY () {2;}' unless defined(&V_DISPLAY_STAND_BY);
    eval 'sub V_DISPLAY_SUSPEND () {3;}' unless defined(&V_DISPLAY_SUSPEND);
    eval 'sub FBIO_BLANK () { &_IOW(ord(\'F\'), 115, \'int\');}' unless defined(&FBIO_BLANK);
}
1;
