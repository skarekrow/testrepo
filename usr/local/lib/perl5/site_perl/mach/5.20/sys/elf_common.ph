require '_h2ph_pre.ph';

no warnings qw(redefine misc);

unless(defined(&_SYS_ELF_COMMON_H_)) {
    eval 'sub _SYS_ELF_COMMON_H_ () {1;}' unless defined(&_SYS_ELF_COMMON_H_);
    eval 'sub EI_MAG0 () {0;}' unless defined(&EI_MAG0);
    eval 'sub EI_MAG1 () {1;}' unless defined(&EI_MAG1);
    eval 'sub EI_MAG2 () {2;}' unless defined(&EI_MAG2);
    eval 'sub EI_MAG3 () {3;}' unless defined(&EI_MAG3);
    eval 'sub EI_CLASS () {4;}' unless defined(&EI_CLASS);
    eval 'sub EI_DATA () {5;}' unless defined(&EI_DATA);
    eval 'sub EI_VERSION () {6;}' unless defined(&EI_VERSION);
    eval 'sub EI_OSABI () {7;}' unless defined(&EI_OSABI);
    eval 'sub EI_ABIVERSION () {8;}' unless defined(&EI_ABIVERSION);
    eval 'sub OLD_EI_BRAND () {8;}' unless defined(&OLD_EI_BRAND);
    eval 'sub EI_PAD () {9;}' unless defined(&EI_PAD);
    eval 'sub EI_NIDENT () {16;}' unless defined(&EI_NIDENT);
    eval 'sub ELFMAG0 () {0x7f;}' unless defined(&ELFMAG0);
    eval 'sub ELFMAG1 () {ord(\'E\');}' unless defined(&ELFMAG1);
    eval 'sub ELFMAG2 () {ord(\'L\');}' unless defined(&ELFMAG2);
    eval 'sub ELFMAG3 () {ord(\'F\');}' unless defined(&ELFMAG3);
    eval 'sub ELFMAG () {"\\177ELF";}' unless defined(&ELFMAG);
    eval 'sub SELFMAG () {4;}' unless defined(&SELFMAG);
    eval 'sub EV_NONE () {0;}' unless defined(&EV_NONE);
    eval 'sub EV_CURRENT () {1;}' unless defined(&EV_CURRENT);
    eval 'sub ELFCLASSNONE () {0;}' unless defined(&ELFCLASSNONE);
    eval 'sub ELFCLASS32 () {1;}' unless defined(&ELFCLASS32);
    eval 'sub ELFCLASS64 () {2;}' unless defined(&ELFCLASS64);
    eval 'sub ELFDATANONE () {0;}' unless defined(&ELFDATANONE);
    eval 'sub ELFDATA2LSB () {1;}' unless defined(&ELFDATA2LSB);
    eval 'sub ELFDATA2MSB () {2;}' unless defined(&ELFDATA2MSB);
    eval 'sub ELFOSABI_NONE () {0;}' unless defined(&ELFOSABI_NONE);
    eval 'sub ELFOSABI_HPUX () {1;}' unless defined(&ELFOSABI_HPUX);
    eval 'sub ELFOSABI_NETBSD () {2;}' unless defined(&ELFOSABI_NETBSD);
    eval 'sub ELFOSABI_LINUX () {3;}' unless defined(&ELFOSABI_LINUX);
    eval 'sub ELFOSABI_HURD () {4;}' unless defined(&ELFOSABI_HURD);
    eval 'sub ELFOSABI_86OPEN () {5;}' unless defined(&ELFOSABI_86OPEN);
    eval 'sub ELFOSABI_SOLARIS () {6;}' unless defined(&ELFOSABI_SOLARIS);
    eval 'sub ELFOSABI_AIX () {7;}' unless defined(&ELFOSABI_AIX);
    eval 'sub ELFOSABI_IRIX () {8;}' unless defined(&ELFOSABI_IRIX);
    eval 'sub ELFOSABI_FREEBSD () {9;}' unless defined(&ELFOSABI_FREEBSD);
    eval 'sub ELFOSABI_TRU64 () {10;}' unless defined(&ELFOSABI_TRU64);
    eval 'sub ELFOSABI_MODESTO () {11;}' unless defined(&ELFOSABI_MODESTO);
    eval 'sub ELFOSABI_OPENBSD () {12;}' unless defined(&ELFOSABI_OPENBSD);
    eval 'sub ELFOSABI_OPENVMS () {13;}' unless defined(&ELFOSABI_OPENVMS);
    eval 'sub ELFOSABI_NSK () {14;}' unless defined(&ELFOSABI_NSK);
    eval 'sub ELFOSABI_AROS () {15;}' unless defined(&ELFOSABI_AROS);
    eval 'sub ELFOSABI_ARM () {97;}' unless defined(&ELFOSABI_ARM);
    eval 'sub ELFOSABI_STANDALONE () {255;}' unless defined(&ELFOSABI_STANDALONE);
    eval 'sub ELFOSABI_SYSV () { &ELFOSABI_NONE;}' unless defined(&ELFOSABI_SYSV);
    eval 'sub ELFOSABI_MONTEREY () { &ELFOSABI_AIX;}' unless defined(&ELFOSABI_MONTEREY);
    eval 'sub IS_ELF {
        my($ehdr) = @_;
	    eval q((($ehdr). $e_ident[ &EI_MAG0] ==  &ELFMAG0  && ($ehdr). $e_ident[ &EI_MAG1] ==  &ELFMAG1  && ($ehdr). $e_ident[ &EI_MAG2] ==  &ELFMAG2  && ($ehdr). $e_ident[ &EI_MAG3] ==  &ELFMAG3));
    }' unless defined(&IS_ELF);
    eval 'sub ET_NONE () {0;}' unless defined(&ET_NONE);
    eval 'sub ET_REL () {1;}' unless defined(&ET_REL);
    eval 'sub ET_EXEC () {2;}' unless defined(&ET_EXEC);
    eval 'sub ET_DYN () {3;}' unless defined(&ET_DYN);
    eval 'sub ET_CORE () {4;}' unless defined(&ET_CORE);
    eval 'sub ET_LOOS () {0xfe00;}' unless defined(&ET_LOOS);
    eval 'sub ET_HIOS () {0xfeff;}' unless defined(&ET_HIOS);
    eval 'sub ET_LOPROC () {0xff00;}' unless defined(&ET_LOPROC);
    eval 'sub ET_HIPROC () {0xffff;}' unless defined(&ET_HIPROC);
    eval 'sub EM_NONE () {0;}' unless defined(&EM_NONE);
    eval 'sub EM_M32 () {1;}' unless defined(&EM_M32);
    eval 'sub EM_SPARC () {2;}' unless defined(&EM_SPARC);
    eval 'sub EM_386 () {3;}' unless defined(&EM_386);
    eval 'sub EM_68K () {4;}' unless defined(&EM_68K);
    eval 'sub EM_88K () {5;}' unless defined(&EM_88K);
    eval 'sub EM_860 () {7;}' unless defined(&EM_860);
    eval 'sub EM_MIPS () {8;}' unless defined(&EM_MIPS);
    eval 'sub EM_S370 () {9;}' unless defined(&EM_S370);
    eval 'sub EM_MIPS_RS3_LE () {10;}' unless defined(&EM_MIPS_RS3_LE);
    eval 'sub EM_PARISC () {15;}' unless defined(&EM_PARISC);
    eval 'sub EM_VPP500 () {17;}' unless defined(&EM_VPP500);
    eval 'sub EM_SPARC32PLUS () {18;}' unless defined(&EM_SPARC32PLUS);
    eval 'sub EM_960 () {19;}' unless defined(&EM_960);
    eval 'sub EM_PPC () {20;}' unless defined(&EM_PPC);
    eval 'sub EM_PPC64 () {21;}' unless defined(&EM_PPC64);
    eval 'sub EM_S390 () {22;}' unless defined(&EM_S390);
    eval 'sub EM_V800 () {36;}' unless defined(&EM_V800);
    eval 'sub EM_FR20 () {37;}' unless defined(&EM_FR20);
    eval 'sub EM_RH32 () {38;}' unless defined(&EM_RH32);
    eval 'sub EM_RCE () {39;}' unless defined(&EM_RCE);
    eval 'sub EM_ARM () {40;}' unless defined(&EM_ARM);
    eval 'sub EM_SH () {42;}' unless defined(&EM_SH);
    eval 'sub EM_SPARCV9 () {43;}' unless defined(&EM_SPARCV9);
    eval 'sub EM_TRICORE () {44;}' unless defined(&EM_TRICORE);
    eval 'sub EM_ARC () {45;}' unless defined(&EM_ARC);
    eval 'sub EM_H8_300 () {46;}' unless defined(&EM_H8_300);
    eval 'sub EM_H8_300H () {47;}' unless defined(&EM_H8_300H);
    eval 'sub EM_H8S () {48;}' unless defined(&EM_H8S);
    eval 'sub EM_H8_500 () {49;}' unless defined(&EM_H8_500);
    eval 'sub EM_IA_64 () {50;}' unless defined(&EM_IA_64);
    eval 'sub EM_MIPS_X () {51;}' unless defined(&EM_MIPS_X);
    eval 'sub EM_COLDFIRE () {52;}' unless defined(&EM_COLDFIRE);
    eval 'sub EM_68HC12 () {53;}' unless defined(&EM_68HC12);
    eval 'sub EM_MMA () {54;}' unless defined(&EM_MMA);
    eval 'sub EM_PCP () {55;}' unless defined(&EM_PCP);
    eval 'sub EM_NCPU () {56;}' unless defined(&EM_NCPU);
    eval 'sub EM_NDR1 () {57;}' unless defined(&EM_NDR1);
    eval 'sub EM_STARCORE () {58;}' unless defined(&EM_STARCORE);
    eval 'sub EM_ME16 () {59;}' unless defined(&EM_ME16);
    eval 'sub EM_ST100 () {60;}' unless defined(&EM_ST100);
    eval 'sub EM_TINYJ () {61;}' unless defined(&EM_TINYJ);
    eval 'sub EM_X86_64 () {62;}' unless defined(&EM_X86_64);
    eval 'sub EM_AMD64 () { &EM_X86_64;}' unless defined(&EM_AMD64);
    eval 'sub EM_PDSP () {63;}' unless defined(&EM_PDSP);
    eval 'sub EM_FX66 () {66;}' unless defined(&EM_FX66);
    eval 'sub EM_ST9PLUS () {67;}' unless defined(&EM_ST9PLUS);
    eval 'sub EM_ST7 () {68;}' unless defined(&EM_ST7);
    eval 'sub EM_68HC16 () {69;}' unless defined(&EM_68HC16);
    eval 'sub EM_68HC11 () {70;}' unless defined(&EM_68HC11);
    eval 'sub EM_68HC08 () {71;}' unless defined(&EM_68HC08);
    eval 'sub EM_68HC05 () {72;}' unless defined(&EM_68HC05);
    eval 'sub EM_SVX () {73;}' unless defined(&EM_SVX);
    eval 'sub EM_ST19 () {74;}' unless defined(&EM_ST19);
    eval 'sub EM_VAX () {75;}' unless defined(&EM_VAX);
    eval 'sub EM_CRIS () {76;}' unless defined(&EM_CRIS);
    eval 'sub EM_JAVELIN () {77;}' unless defined(&EM_JAVELIN);
    eval 'sub EM_FIREPATH () {78;}' unless defined(&EM_FIREPATH);
    eval 'sub EM_ZSP () {79;}' unless defined(&EM_ZSP);
    eval 'sub EM_MMIX () {80;}' unless defined(&EM_MMIX);
    eval 'sub EM_HUANY () {81;}' unless defined(&EM_HUANY);
    eval 'sub EM_PRISM () {82;}' unless defined(&EM_PRISM);
    eval 'sub EM_AVR () {83;}' unless defined(&EM_AVR);
    eval 'sub EM_FR30 () {84;}' unless defined(&EM_FR30);
    eval 'sub EM_D10V () {85;}' unless defined(&EM_D10V);
    eval 'sub EM_D30V () {86;}' unless defined(&EM_D30V);
    eval 'sub EM_V850 () {87;}' unless defined(&EM_V850);
    eval 'sub EM_M32R () {88;}' unless defined(&EM_M32R);
    eval 'sub EM_MN10300 () {89;}' unless defined(&EM_MN10300);
    eval 'sub EM_MN10200 () {90;}' unless defined(&EM_MN10200);
    eval 'sub EM_PJ () {91;}' unless defined(&EM_PJ);
    eval 'sub EM_OPENRISC () {92;}' unless defined(&EM_OPENRISC);
    eval 'sub EM_ARC_A5 () {93;}' unless defined(&EM_ARC_A5);
    eval 'sub EM_XTENSA () {94;}' unless defined(&EM_XTENSA);
    eval 'sub EM_VIDEOCORE () {95;}' unless defined(&EM_VIDEOCORE);
    eval 'sub EM_TMM_GPP () {96;}' unless defined(&EM_TMM_GPP);
    eval 'sub EM_NS32K () {97;}' unless defined(&EM_NS32K);
    eval 'sub EM_TPC () {98;}' unless defined(&EM_TPC);
    eval 'sub EM_SNP1K () {99;}' unless defined(&EM_SNP1K);
    eval 'sub EM_ST200 () {100;}' unless defined(&EM_ST200);
    eval 'sub EM_IP2K () {101;}' unless defined(&EM_IP2K);
    eval 'sub EM_MAX () {102;}' unless defined(&EM_MAX);
    eval 'sub EM_CR () {103;}' unless defined(&EM_CR);
    eval 'sub EM_F2MC16 () {104;}' unless defined(&EM_F2MC16);
    eval 'sub EM_MSP430 () {105;}' unless defined(&EM_MSP430);
    eval 'sub EM_BLACKFIN () {106;}' unless defined(&EM_BLACKFIN);
    eval 'sub EM_SE_C33 () {107;}' unless defined(&EM_SE_C33);
    eval 'sub EM_SEP () {108;}' unless defined(&EM_SEP);
    eval 'sub EM_ARCA () {109;}' unless defined(&EM_ARCA);
    eval 'sub EM_UNICORE () {110;}' unless defined(&EM_UNICORE);
    eval 'sub EM_AARCH64 () {183;}' unless defined(&EM_AARCH64);
    eval 'sub EM_486 () {6;}' unless defined(&EM_486);
    eval 'sub EM_MIPS_RS4_BE () {10;}' unless defined(&EM_MIPS_RS4_BE);
    eval 'sub EM_ALPHA_STD () {41;}' unless defined(&EM_ALPHA_STD);
    eval 'sub EM_ALPHA () {0x9026;}' unless defined(&EM_ALPHA);
    eval 'sub SHN_UNDEF () {0;}' unless defined(&SHN_UNDEF);
    eval 'sub SHN_LORESERVE () {0xff00;}' unless defined(&SHN_LORESERVE);
    eval 'sub SHN_LOPROC () {0xff00;}' unless defined(&SHN_LOPROC);
    eval 'sub SHN_HIPROC () {0xff1f;}' unless defined(&SHN_HIPROC);
    eval 'sub SHN_LOOS () {0xff20;}' unless defined(&SHN_LOOS);
    eval 'sub SHN_HIOS () {0xff3f;}' unless defined(&SHN_HIOS);
    eval 'sub SHN_ABS () {0xfff1;}' unless defined(&SHN_ABS);
    eval 'sub SHN_COMMON () {0xfff2;}' unless defined(&SHN_COMMON);
    eval 'sub SHN_XINDEX () {0xffff;}' unless defined(&SHN_XINDEX);
    eval 'sub SHN_HIRESERVE () {0xffff;}' unless defined(&SHN_HIRESERVE);
    eval 'sub SHT_NULL () {0;}' unless defined(&SHT_NULL);
    eval 'sub SHT_PROGBITS () {1;}' unless defined(&SHT_PROGBITS);
    eval 'sub SHT_SYMTAB () {2;}' unless defined(&SHT_SYMTAB);
    eval 'sub SHT_STRTAB () {3;}' unless defined(&SHT_STRTAB);
    eval 'sub SHT_RELA () {4;}' unless defined(&SHT_RELA);
    eval 'sub SHT_HASH () {5;}' unless defined(&SHT_HASH);
    eval 'sub SHT_DYNAMIC () {6;}' unless defined(&SHT_DYNAMIC);
    eval 'sub SHT_NOTE () {7;}' unless defined(&SHT_NOTE);
    eval 'sub SHT_NOBITS () {8;}' unless defined(&SHT_NOBITS);
    eval 'sub SHT_REL () {9;}' unless defined(&SHT_REL);
    eval 'sub SHT_SHLIB () {10;}' unless defined(&SHT_SHLIB);
    eval 'sub SHT_DYNSYM () {11;}' unless defined(&SHT_DYNSYM);
    eval 'sub SHT_INIT_ARRAY () {14;}' unless defined(&SHT_INIT_ARRAY);
    eval 'sub SHT_FINI_ARRAY () {15;}' unless defined(&SHT_FINI_ARRAY);
    eval 'sub SHT_PREINIT_ARRAY () {16;}' unless defined(&SHT_PREINIT_ARRAY);
    eval 'sub SHT_GROUP () {17;}' unless defined(&SHT_GROUP);
    eval 'sub SHT_SYMTAB_SHNDX () {18;}' unless defined(&SHT_SYMTAB_SHNDX);
    eval 'sub SHT_LOOS () {0x60000000;}' unless defined(&SHT_LOOS);
    eval 'sub SHT_LOSUNW () {0x6ffffff4;}' unless defined(&SHT_LOSUNW);
    eval 'sub SHT_SUNW_dof () {0x6ffffff4;}' unless defined(&SHT_SUNW_dof);
    eval 'sub SHT_SUNW_cap () {0x6ffffff5;}' unless defined(&SHT_SUNW_cap);
    eval 'sub SHT_SUNW_SIGNATURE () {0x6ffffff6;}' unless defined(&SHT_SUNW_SIGNATURE);
    eval 'sub SHT_GNU_HASH () {0x6ffffff6;}' unless defined(&SHT_GNU_HASH);
    eval 'sub SHT_SUNW_ANNOTATE () {0x6ffffff7;}' unless defined(&SHT_SUNW_ANNOTATE);
    eval 'sub SHT_SUNW_DEBUGSTR () {0x6ffffff8;}' unless defined(&SHT_SUNW_DEBUGSTR);
    eval 'sub SHT_SUNW_DEBUG () {0x6ffffff9;}' unless defined(&SHT_SUNW_DEBUG);
    eval 'sub SHT_SUNW_move () {0x6ffffffa;}' unless defined(&SHT_SUNW_move);
    eval 'sub SHT_SUNW_COMDAT () {0x6ffffffb;}' unless defined(&SHT_SUNW_COMDAT);
    eval 'sub SHT_SUNW_syminfo () {0x6ffffffc;}' unless defined(&SHT_SUNW_syminfo);
    eval 'sub SHT_SUNW_verdef () {0x6ffffffd;}' unless defined(&SHT_SUNW_verdef);
    eval 'sub SHT_GNU_verdef () {0x6ffffffd;}' unless defined(&SHT_GNU_verdef);
    eval 'sub SHT_SUNW_verneed () {0x6ffffffe;}' unless defined(&SHT_SUNW_verneed);
    eval 'sub SHT_GNU_verneed () {0x6ffffffe;}' unless defined(&SHT_GNU_verneed);
    eval 'sub SHT_SUNW_versym () {0x6fffffff;}' unless defined(&SHT_SUNW_versym);
    eval 'sub SHT_GNU_versym () {0x6fffffff;}' unless defined(&SHT_GNU_versym);
    eval 'sub SHT_HISUNW () {0x6fffffff;}' unless defined(&SHT_HISUNW);
    eval 'sub SHT_HIOS () {0x6fffffff;}' unless defined(&SHT_HIOS);
    eval 'sub SHT_LOPROC () {0x70000000;}' unless defined(&SHT_LOPROC);
    eval 'sub SHT_AMD64_UNWIND () {0x70000001;}' unless defined(&SHT_AMD64_UNWIND);
    eval 'sub SHT_ARM_EXIDX () {0x70000001;}' unless defined(&SHT_ARM_EXIDX);
    eval 'sub SHT_ARM_PREEMPTMAP () {0x70000002;}' unless defined(&SHT_ARM_PREEMPTMAP);
    eval 'sub SHT_ARM_ATTRIBUTES () {0x70000003;}' unless defined(&SHT_ARM_ATTRIBUTES);
    eval 'sub SHT_ARM_DEBUGOVERLAY () {0x70000004;}' unless defined(&SHT_ARM_DEBUGOVERLAY);
    eval 'sub SHT_ARM_OVERLAYSECTION () {0x70000005;}' unless defined(&SHT_ARM_OVERLAYSECTION);
    eval 'sub SHT_MIPS_REGINFO () {0x70000006;}' unless defined(&SHT_MIPS_REGINFO);
    eval 'sub SHT_MIPS_OPTIONS () {0x7000000d;}' unless defined(&SHT_MIPS_OPTIONS);
    eval 'sub SHT_MIPS_DWARF () {0x7000001e;}' unless defined(&SHT_MIPS_DWARF);
    eval 'sub SHT_HIPROC () {0x7fffffff;}' unless defined(&SHT_HIPROC);
    eval 'sub SHT_LOUSER () {0x80000000;}' unless defined(&SHT_LOUSER);
    eval 'sub SHT_HIUSER () {0xffffffff;}' unless defined(&SHT_HIUSER);
    eval 'sub SHF_WRITE () {0x1;}' unless defined(&SHF_WRITE);
    eval 'sub SHF_ALLOC () {0x2;}' unless defined(&SHF_ALLOC);
    eval 'sub SHF_EXECINSTR () {0x4;}' unless defined(&SHF_EXECINSTR);
    eval 'sub SHF_MERGE () {0x10;}' unless defined(&SHF_MERGE);
    eval 'sub SHF_STRINGS () {0x20;}' unless defined(&SHF_STRINGS);
    eval 'sub SHF_INFO_LINK () {0x40;}' unless defined(&SHF_INFO_LINK);
    eval 'sub SHF_LINK_ORDER () {0x80;}' unless defined(&SHF_LINK_ORDER);
    eval 'sub SHF_OS_NONCONFORMING () {0x100;}' unless defined(&SHF_OS_NONCONFORMING);
    eval 'sub SHF_GROUP () {0x200;}' unless defined(&SHF_GROUP);
    eval 'sub SHF_TLS () {0x400;}' unless defined(&SHF_TLS);
    eval 'sub SHF_MASKOS () {0xff00000;}' unless defined(&SHF_MASKOS);
    eval 'sub SHF_MASKPROC () {0xf0000000;}' unless defined(&SHF_MASKPROC);
    eval 'sub PT_NULL () {0;}' unless defined(&PT_NULL);
    eval 'sub PT_LOAD () {1;}' unless defined(&PT_LOAD);
    eval 'sub PT_DYNAMIC () {2;}' unless defined(&PT_DYNAMIC);
    eval 'sub PT_INTERP () {3;}' unless defined(&PT_INTERP);
    eval 'sub PT_NOTE () {4;}' unless defined(&PT_NOTE);
    eval 'sub PT_SHLIB () {5;}' unless defined(&PT_SHLIB);
    eval 'sub PT_PHDR () {6;}' unless defined(&PT_PHDR);
    eval 'sub PT_TLS () {7;}' unless defined(&PT_TLS);
    eval 'sub PT_LOOS () {0x60000000;}' unless defined(&PT_LOOS);
    eval 'sub PT_SUNW_UNWIND () {0x6464e550;}' unless defined(&PT_SUNW_UNWIND);
    eval 'sub PT_GNU_EH_FRAME () {0x6474e550;}' unless defined(&PT_GNU_EH_FRAME);
    eval 'sub PT_GNU_STACK () {0x6474e551;}' unless defined(&PT_GNU_STACK);
    eval 'sub PT_GNU_RELRO () {0x6474e552;}' unless defined(&PT_GNU_RELRO);
    eval 'sub PT_LOSUNW () {0x6ffffffa;}' unless defined(&PT_LOSUNW);
    eval 'sub PT_SUNWBSS () {0x6ffffffa;}' unless defined(&PT_SUNWBSS);
    eval 'sub PT_SUNWSTACK () {0x6ffffffb;}' unless defined(&PT_SUNWSTACK);
    eval 'sub PT_SUNWDTRACE () {0x6ffffffc;}' unless defined(&PT_SUNWDTRACE);
    eval 'sub PT_SUNWCAP () {0x6ffffffd;}' unless defined(&PT_SUNWCAP);
    eval 'sub PT_HISUNW () {0x6fffffff;}' unless defined(&PT_HISUNW);
    eval 'sub PT_HIOS () {0x6fffffff;}' unless defined(&PT_HIOS);
    eval 'sub PT_LOPROC () {0x70000000;}' unless defined(&PT_LOPROC);
    eval 'sub PT_HIPROC () {0x7fffffff;}' unless defined(&PT_HIPROC);
    eval 'sub PF_X () {0x1;}' unless defined(&PF_X);
    eval 'sub PF_W () {0x2;}' unless defined(&PF_W);
    eval 'sub PF_R () {0x4;}' unless defined(&PF_R);
    eval 'sub PF_MASKOS () {0xff00000;}' unless defined(&PF_MASKOS);
    eval 'sub PF_MASKPROC () {0xf0000000;}' unless defined(&PF_MASKPROC);
    eval 'sub PN_XNUM () {0xffff;}' unless defined(&PN_XNUM);
    eval 'sub DT_NULL () {0;}' unless defined(&DT_NULL);
    eval 'sub DT_NEEDED () {1;}' unless defined(&DT_NEEDED);
    eval 'sub DT_PLTRELSZ () {2;}' unless defined(&DT_PLTRELSZ);
    eval 'sub DT_PLTGOT () {3;}' unless defined(&DT_PLTGOT);
    eval 'sub DT_HASH () {4;}' unless defined(&DT_HASH);
    eval 'sub DT_STRTAB () {5;}' unless defined(&DT_STRTAB);
    eval 'sub DT_SYMTAB () {6;}' unless defined(&DT_SYMTAB);
    eval 'sub DT_RELA () {7;}' unless defined(&DT_RELA);
    eval 'sub DT_RELASZ () {8;}' unless defined(&DT_RELASZ);
    eval 'sub DT_RELAENT () {9;}' unless defined(&DT_RELAENT);
    eval 'sub DT_STRSZ () {10;}' unless defined(&DT_STRSZ);
    eval 'sub DT_SYMENT () {11;}' unless defined(&DT_SYMENT);
    eval 'sub DT_INIT () {12;}' unless defined(&DT_INIT);
    eval 'sub DT_FINI () {13;}' unless defined(&DT_FINI);
    eval 'sub DT_SONAME () {14;}' unless defined(&DT_SONAME);
    eval 'sub DT_RPATH () {15;}' unless defined(&DT_RPATH);
    eval 'sub DT_SYMBOLIC () {16;}' unless defined(&DT_SYMBOLIC);
    eval 'sub DT_REL () {17;}' unless defined(&DT_REL);
    eval 'sub DT_RELSZ () {18;}' unless defined(&DT_RELSZ);
    eval 'sub DT_RELENT () {19;}' unless defined(&DT_RELENT);
    eval 'sub DT_PLTREL () {20;}' unless defined(&DT_PLTREL);
    eval 'sub DT_DEBUG () {21;}' unless defined(&DT_DEBUG);
    eval 'sub DT_TEXTREL () {22;}' unless defined(&DT_TEXTREL);
    eval 'sub DT_JMPREL () {23;}' unless defined(&DT_JMPREL);
    eval 'sub DT_BIND_NOW () {24;}' unless defined(&DT_BIND_NOW);
    eval 'sub DT_INIT_ARRAY () {25;}' unless defined(&DT_INIT_ARRAY);
    eval 'sub DT_FINI_ARRAY () {26;}' unless defined(&DT_FINI_ARRAY);
    eval 'sub DT_INIT_ARRAYSZ () {27;}' unless defined(&DT_INIT_ARRAYSZ);
    eval 'sub DT_FINI_ARRAYSZ () {28;}' unless defined(&DT_FINI_ARRAYSZ);
    eval 'sub DT_RUNPATH () {29;}' unless defined(&DT_RUNPATH);
    eval 'sub DT_FLAGS () {30;}' unless defined(&DT_FLAGS);
    eval 'sub DT_ENCODING () {32;}' unless defined(&DT_ENCODING);
    eval 'sub DT_PREINIT_ARRAY () {32;}' unless defined(&DT_PREINIT_ARRAY);
    eval 'sub DT_PREINIT_ARRAYSZ () {33;}' unless defined(&DT_PREINIT_ARRAYSZ);
    eval 'sub DT_MAXPOSTAGS () {34;}' unless defined(&DT_MAXPOSTAGS);
    eval 'sub DT_LOOS () {0x6000000d;}' unless defined(&DT_LOOS);
    eval 'sub DT_SUNW_AUXILIARY () {0x6000000d;}' unless defined(&DT_SUNW_AUXILIARY);
    eval 'sub DT_SUNW_RTLDINF () {0x6000000e;}' unless defined(&DT_SUNW_RTLDINF);
    eval 'sub DT_SUNW_FILTER () {0x6000000f;}' unless defined(&DT_SUNW_FILTER);
    eval 'sub DT_SUNW_CAP () {0x60000010;}' unless defined(&DT_SUNW_CAP);
    eval 'sub DT_HIOS () {0x6ffff000;}' unless defined(&DT_HIOS);
    eval 'sub DT_VALRNGLO () {0x6ffffd00;}' unless defined(&DT_VALRNGLO);
    eval 'sub DT_CHECKSUM () {0x6ffffdf8;}' unless defined(&DT_CHECKSUM);
    eval 'sub DT_PLTPADSZ () {0x6ffffdf9;}' unless defined(&DT_PLTPADSZ);
    eval 'sub DT_MOVEENT () {0x6ffffdfa;}' unless defined(&DT_MOVEENT);
    eval 'sub DT_MOVESZ () {0x6ffffdfb;}' unless defined(&DT_MOVESZ);
    eval 'sub DT_FEATURE () {0x6ffffdfc;}' unless defined(&DT_FEATURE);
    eval 'sub DT_POSFLAG_1 () {0x6ffffdfd;}' unless defined(&DT_POSFLAG_1);
    eval 'sub DT_SYMINSZ () {0x6ffffdfe;}' unless defined(&DT_SYMINSZ);
    eval 'sub DT_SYMINENT () {0x6ffffdff;}' unless defined(&DT_SYMINENT);
    eval 'sub DT_VALRNGHI () {0x6ffffdff;}' unless defined(&DT_VALRNGHI);
    eval 'sub DT_ADDRRNGLO () {0x6ffffe00;}' unless defined(&DT_ADDRRNGLO);
    eval 'sub DT_GNU_HASH () {0x6ffffef5;}' unless defined(&DT_GNU_HASH);
    eval 'sub DT_CONFIG () {0x6ffffefa;}' unless defined(&DT_CONFIG);
    eval 'sub DT_DEPAUDIT () {0x6ffffefb;}' unless defined(&DT_DEPAUDIT);
    eval 'sub DT_AUDIT () {0x6ffffefc;}' unless defined(&DT_AUDIT);
    eval 'sub DT_PLTPAD () {0x6ffffefd;}' unless defined(&DT_PLTPAD);
    eval 'sub DT_MOVETAB () {0x6ffffefe;}' unless defined(&DT_MOVETAB);
    eval 'sub DT_SYMINFO () {0x6ffffeff;}' unless defined(&DT_SYMINFO);
    eval 'sub DT_ADDRRNGHI () {0x6ffffeff;}' unless defined(&DT_ADDRRNGHI);
    eval 'sub DT_VERSYM () {0x6ffffff0;}' unless defined(&DT_VERSYM);
    eval 'sub DT_RELACOUNT () {0x6ffffff9;}' unless defined(&DT_RELACOUNT);
    eval 'sub DT_RELCOUNT () {0x6ffffffa;}' unless defined(&DT_RELCOUNT);
    eval 'sub DT_FLAGS_1 () {0x6ffffffb;}' unless defined(&DT_FLAGS_1);
    eval 'sub DT_VERDEF () {0x6ffffffc;}' unless defined(&DT_VERDEF);
    eval 'sub DT_VERDEFNUM () {0x6ffffffd;}' unless defined(&DT_VERDEFNUM);
    eval 'sub DT_VERNEED () {0x6ffffffe;}' unless defined(&DT_VERNEED);
    eval 'sub DT_VERNEEDNUM () {0x6fffffff;}' unless defined(&DT_VERNEEDNUM);
    eval 'sub DT_LOPROC () {0x70000000;}' unless defined(&DT_LOPROC);
    eval 'sub DT_DEPRECATED_SPARC_REGISTER () {0x7000001;}' unless defined(&DT_DEPRECATED_SPARC_REGISTER);
    eval 'sub DT_AUXILIARY () {0x7ffffffd;}' unless defined(&DT_AUXILIARY);
    eval 'sub DT_USED () {0x7ffffffe;}' unless defined(&DT_USED);
    eval 'sub DT_FILTER () {0x7fffffff;}' unless defined(&DT_FILTER);
    eval 'sub DT_HIPROC () {0x7fffffff;}' unless defined(&DT_HIPROC);
    eval 'sub DF_ORIGIN () {0x1;}' unless defined(&DF_ORIGIN);
    eval 'sub DF_SYMBOLIC () {0x2;}' unless defined(&DF_SYMBOLIC);
    eval 'sub DF_TEXTREL () {0x4;}' unless defined(&DF_TEXTREL);
    eval 'sub DF_BIND_NOW () {0x8;}' unless defined(&DF_BIND_NOW);
    eval 'sub DF_STATIC_TLS () {0x10;}' unless defined(&DF_STATIC_TLS);
    eval 'sub DF_1_BIND_NOW () {0x1;}' unless defined(&DF_1_BIND_NOW);
    eval 'sub DF_1_GLOBAL () {0x2;}' unless defined(&DF_1_GLOBAL);
    eval 'sub DF_1_NODELETE () {0x8;}' unless defined(&DF_1_NODELETE);
    eval 'sub DF_1_LOADFLTR () {0x10;}' unless defined(&DF_1_LOADFLTR);
    eval 'sub DF_1_NOOPEN () {0x40;}' unless defined(&DF_1_NOOPEN);
    eval 'sub DF_1_ORIGIN () {0x80;}' unless defined(&DF_1_ORIGIN);
    eval 'sub DF_1_INTERPOSE () {0x400;}' unless defined(&DF_1_INTERPOSE);
    eval 'sub DF_1_NODEFLIB () {0x800;}' unless defined(&DF_1_NODEFLIB);
    eval 'sub NT_PRSTATUS () {1;}' unless defined(&NT_PRSTATUS);
    eval 'sub NT_FPREGSET () {2;}' unless defined(&NT_FPREGSET);
    eval 'sub NT_PRPSINFO () {3;}' unless defined(&NT_PRPSINFO);
    eval 'sub NT_THRMISC () {7;}' unless defined(&NT_THRMISC);
    eval 'sub NT_PROCSTAT_PROC () {8;}' unless defined(&NT_PROCSTAT_PROC);
    eval 'sub NT_PROCSTAT_FILES () {9;}' unless defined(&NT_PROCSTAT_FILES);
    eval 'sub NT_PROCSTAT_VMMAP () {10;}' unless defined(&NT_PROCSTAT_VMMAP);
    eval 'sub NT_PROCSTAT_GROUPS () {11;}' unless defined(&NT_PROCSTAT_GROUPS);
    eval 'sub NT_PROCSTAT_UMASK () {12;}' unless defined(&NT_PROCSTAT_UMASK);
    eval 'sub NT_PROCSTAT_RLIMIT () {13;}' unless defined(&NT_PROCSTAT_RLIMIT);
    eval 'sub NT_PROCSTAT_OSREL () {14;}' unless defined(&NT_PROCSTAT_OSREL);
    eval 'sub NT_PROCSTAT_PSSTRINGS () {15;}' unless defined(&NT_PROCSTAT_PSSTRINGS);
    eval 'sub NT_PROCSTAT_AUXV () {16;}' unless defined(&NT_PROCSTAT_AUXV);
    eval 'sub STB_LOCAL () {0;}' unless defined(&STB_LOCAL);
    eval 'sub STB_GLOBAL () {1;}' unless defined(&STB_GLOBAL);
    eval 'sub STB_WEAK () {2;}' unless defined(&STB_WEAK);
    eval 'sub STB_LOOS () {10;}' unless defined(&STB_LOOS);
    eval 'sub STB_HIOS () {12;}' unless defined(&STB_HIOS);
    eval 'sub STB_LOPROC () {13;}' unless defined(&STB_LOPROC);
    eval 'sub STB_HIPROC () {15;}' unless defined(&STB_HIPROC);
    eval 'sub STT_NOTYPE () {0;}' unless defined(&STT_NOTYPE);
    eval 'sub STT_OBJECT () {1;}' unless defined(&STT_OBJECT);
    eval 'sub STT_FUNC () {2;}' unless defined(&STT_FUNC);
    eval 'sub STT_SECTION () {3;}' unless defined(&STT_SECTION);
    eval 'sub STT_FILE () {4;}' unless defined(&STT_FILE);
    eval 'sub STT_COMMON () {5;}' unless defined(&STT_COMMON);
    eval 'sub STT_TLS () {6;}' unless defined(&STT_TLS);
    eval 'sub STT_NUM () {7;}' unless defined(&STT_NUM);
    eval 'sub STT_LOOS () {10;}' unless defined(&STT_LOOS);
    eval 'sub STT_GNU_IFUNC () {10;}' unless defined(&STT_GNU_IFUNC);
    eval 'sub STT_HIOS () {12;}' unless defined(&STT_HIOS);
    eval 'sub STT_LOPROC () {13;}' unless defined(&STT_LOPROC);
    eval 'sub STT_HIPROC () {15;}' unless defined(&STT_HIPROC);
    eval 'sub STV_DEFAULT () {0x;}' unless defined(&STV_DEFAULT);
    eval 'sub STV_INTERNAL () {0x1;}' unless defined(&STV_INTERNAL);
    eval 'sub STV_HIDDEN () {0x2;}' unless defined(&STV_HIDDEN);
    eval 'sub STV_PROTECTED () {0x3;}' unless defined(&STV_PROTECTED);
    eval 'sub STV_EXPORTED () {0x4;}' unless defined(&STV_EXPORTED);
    eval 'sub STV_SINGLETON () {0x5;}' unless defined(&STV_SINGLETON);
    eval 'sub STV_ELIMINATE () {0x6;}' unless defined(&STV_ELIMINATE);
    eval 'sub STN_UNDEF () {0;}' unless defined(&STN_UNDEF);
    eval 'sub VER_DEF_CURRENT () {1;}' unless defined(&VER_DEF_CURRENT);
    eval 'sub VER_DEF_IDX {
        my($x) = @_;
	    eval q( &VER_NDX($x));
    }' unless defined(&VER_DEF_IDX);
    eval 'sub VER_FLG_BASE () {0x1;}' unless defined(&VER_FLG_BASE);
    eval 'sub VER_FLG_WEAK () {0x2;}' unless defined(&VER_FLG_WEAK);
    eval 'sub VER_NEED_CURRENT () {1;}' unless defined(&VER_NEED_CURRENT);
    eval 'sub VER_NEED_WEAK () {(1 << 15);}' unless defined(&VER_NEED_WEAK);
    eval 'sub VER_NEED_HIDDEN () { &VER_NDX_HIDDEN;}' unless defined(&VER_NEED_HIDDEN);
    eval 'sub VER_NEED_IDX {
        my($x) = @_;
	    eval q( &VER_NDX($x));
    }' unless defined(&VER_NEED_IDX);
    eval 'sub VER_NDX_LOCAL () {0;}' unless defined(&VER_NDX_LOCAL);
    eval 'sub VER_NDX_GLOBAL () {1;}' unless defined(&VER_NDX_GLOBAL);
    eval 'sub VER_NDX_GIVEN () {2;}' unless defined(&VER_NDX_GIVEN);
    eval 'sub VER_NDX_HIDDEN () {(1 << 15);}' unless defined(&VER_NDX_HIDDEN);
    eval 'sub VER_NDX {
        my($x) = @_;
	    eval q((($x) & ~(1 << 15)));
    }' unless defined(&VER_NDX);
    eval 'sub CA_SUNW_NULL () {0;}' unless defined(&CA_SUNW_NULL);
    eval 'sub CA_SUNW_HW_1 () {1;}' unless defined(&CA_SUNW_HW_1);
    eval 'sub CA_SUNW_SF_1 () {2;}' unless defined(&CA_SUNW_SF_1);
    eval 'sub SYMINFO_FLG_DIRECT () {0x1;}' unless defined(&SYMINFO_FLG_DIRECT);
    eval 'sub SYMINFO_FLG_PASSTHRU () {0x2;}' unless defined(&SYMINFO_FLG_PASSTHRU);
    eval 'sub SYMINFO_FLG_COPY () {0x4;}' unless defined(&SYMINFO_FLG_COPY);
    eval 'sub SYMINFO_FLG_LAZYLOAD () {0x8;}' unless defined(&SYMINFO_FLG_LAZYLOAD);
    eval 'sub SYMINFO_FLG_DIRECTBIND () {0x10;}' unless defined(&SYMINFO_FLG_DIRECTBIND);
    eval 'sub SYMINFO_FLG_NOEXTDIRECT () {0x20;}' unless defined(&SYMINFO_FLG_NOEXTDIRECT);
    eval 'sub SYMINFO_FLG_FILTER () {0x2;}' unless defined(&SYMINFO_FLG_FILTER);
    eval 'sub SYMINFO_FLG_AUXILIARY () {0x40;}' unless defined(&SYMINFO_FLG_AUXILIARY);
    eval 'sub SYMINFO_BT_SELF () {0xffff;}' unless defined(&SYMINFO_BT_SELF);
    eval 'sub SYMINFO_BT_PARENT () {0xfffe;}' unless defined(&SYMINFO_BT_PARENT);
    eval 'sub SYMINFO_BT_NONE () {0xfffd;}' unless defined(&SYMINFO_BT_NONE);
    eval 'sub SYMINFO_BT_EXTERN () {0xfffc;}' unless defined(&SYMINFO_BT_EXTERN);
    eval 'sub SYMINFO_BT_LOWRESERVE () {0xff00;}' unless defined(&SYMINFO_BT_LOWRESERVE);
    eval 'sub SYMINFO_NONE () {0;}' unless defined(&SYMINFO_NONE);
    eval 'sub SYMINFO_CURRENT () {1;}' unless defined(&SYMINFO_CURRENT);
    eval 'sub SYMINFO_NUM () {2;}' unless defined(&SYMINFO_NUM);
    eval 'sub R_386_NONE () {0;}' unless defined(&R_386_NONE);
    eval 'sub R_386_32 () {1;}' unless defined(&R_386_32);
    eval 'sub R_386_PC32 () {2;}' unless defined(&R_386_PC32);
    eval 'sub R_386_GOT32 () {3;}' unless defined(&R_386_GOT32);
    eval 'sub R_386_PLT32 () {4;}' unless defined(&R_386_PLT32);
    eval 'sub R_386_COPY () {5;}' unless defined(&R_386_COPY);
    eval 'sub R_386_GLOB_DAT () {6;}' unless defined(&R_386_GLOB_DAT);
    eval 'sub R_386_JMP_SLOT () {7;}' unless defined(&R_386_JMP_SLOT);
    eval 'sub R_386_RELATIVE () {8;}' unless defined(&R_386_RELATIVE);
    eval 'sub R_386_GOTOFF () {9;}' unless defined(&R_386_GOTOFF);
    eval 'sub R_386_GOTPC () {10;}' unless defined(&R_386_GOTPC);
    eval 'sub R_386_TLS_TPOFF () {14;}' unless defined(&R_386_TLS_TPOFF);
    eval 'sub R_386_TLS_IE () {15;}' unless defined(&R_386_TLS_IE);
    eval 'sub R_386_TLS_GOTIE () {16;}' unless defined(&R_386_TLS_GOTIE);
    eval 'sub R_386_TLS_LE () {17;}' unless defined(&R_386_TLS_LE);
    eval 'sub R_386_TLS_GD () {18;}' unless defined(&R_386_TLS_GD);
    eval 'sub R_386_TLS_LDM () {19;}' unless defined(&R_386_TLS_LDM);
    eval 'sub R_386_TLS_GD_32 () {24;}' unless defined(&R_386_TLS_GD_32);
    eval 'sub R_386_TLS_GD_PUSH () {25;}' unless defined(&R_386_TLS_GD_PUSH);
    eval 'sub R_386_TLS_GD_CALL () {26;}' unless defined(&R_386_TLS_GD_CALL);
    eval 'sub R_386_TLS_GD_POP () {27;}' unless defined(&R_386_TLS_GD_POP);
    eval 'sub R_386_TLS_LDM_32 () {28;}' unless defined(&R_386_TLS_LDM_32);
    eval 'sub R_386_TLS_LDM_PUSH () {29;}' unless defined(&R_386_TLS_LDM_PUSH);
    eval 'sub R_386_TLS_LDM_CALL () {30;}' unless defined(&R_386_TLS_LDM_CALL);
    eval 'sub R_386_TLS_LDM_POP () {31;}' unless defined(&R_386_TLS_LDM_POP);
    eval 'sub R_386_TLS_LDO_32 () {32;}' unless defined(&R_386_TLS_LDO_32);
    eval 'sub R_386_TLS_IE_32 () {33;}' unless defined(&R_386_TLS_IE_32);
    eval 'sub R_386_TLS_LE_32 () {34;}' unless defined(&R_386_TLS_LE_32);
    eval 'sub R_386_TLS_DTPMOD32 () {35;}' unless defined(&R_386_TLS_DTPMOD32);
    eval 'sub R_386_TLS_DTPOFF32 () {36;}' unless defined(&R_386_TLS_DTPOFF32);
    eval 'sub R_386_TLS_TPOFF32 () {37;}' unless defined(&R_386_TLS_TPOFF32);
    eval 'sub R_386_IRELATIVE () {42;}' unless defined(&R_386_IRELATIVE);
    eval 'sub R_ARM_NONE () {0;}' unless defined(&R_ARM_NONE);
    eval 'sub R_ARM_PC24 () {1;}' unless defined(&R_ARM_PC24);
    eval 'sub R_ARM_ABS32 () {2;}' unless defined(&R_ARM_ABS32);
    eval 'sub R_ARM_REL32 () {3;}' unless defined(&R_ARM_REL32);
    eval 'sub R_ARM_PC13 () {4;}' unless defined(&R_ARM_PC13);
    eval 'sub R_ARM_ABS16 () {5;}' unless defined(&R_ARM_ABS16);
    eval 'sub R_ARM_ABS12 () {6;}' unless defined(&R_ARM_ABS12);
    eval 'sub R_ARM_THM_ABS5 () {7;}' unless defined(&R_ARM_THM_ABS5);
    eval 'sub R_ARM_ABS8 () {8;}' unless defined(&R_ARM_ABS8);
    eval 'sub R_ARM_SBREL32 () {9;}' unless defined(&R_ARM_SBREL32);
    eval 'sub R_ARM_THM_PC22 () {10;}' unless defined(&R_ARM_THM_PC22);
    eval 'sub R_ARM_THM_PC8 () {11;}' unless defined(&R_ARM_THM_PC8);
    eval 'sub R_ARM_AMP_VCALL9 () {12;}' unless defined(&R_ARM_AMP_VCALL9);
    eval 'sub R_ARM_SWI24 () {13;}' unless defined(&R_ARM_SWI24);
    eval 'sub R_ARM_THM_SWI8 () {14;}' unless defined(&R_ARM_THM_SWI8);
    eval 'sub R_ARM_XPC25 () {15;}' unless defined(&R_ARM_XPC25);
    eval 'sub R_ARM_THM_XPC22 () {16;}' unless defined(&R_ARM_THM_XPC22);
    eval 'sub R_ARM_TLS_DTPMOD32 () {17;}' unless defined(&R_ARM_TLS_DTPMOD32);
    eval 'sub R_ARM_TLS_DTPOFF32 () {18;}' unless defined(&R_ARM_TLS_DTPOFF32);
    eval 'sub R_ARM_TLS_TPOFF32 () {19;}' unless defined(&R_ARM_TLS_TPOFF32);
    eval 'sub R_ARM_COPY () {20;}' unless defined(&R_ARM_COPY);
    eval 'sub R_ARM_GLOB_DAT () {21;}' unless defined(&R_ARM_GLOB_DAT);
    eval 'sub R_ARM_JUMP_SLOT () {22;}' unless defined(&R_ARM_JUMP_SLOT);
    eval 'sub R_ARM_RELATIVE () {23;}' unless defined(&R_ARM_RELATIVE);
    eval 'sub R_ARM_GOTOFF () {24;}' unless defined(&R_ARM_GOTOFF);
    eval 'sub R_ARM_GOTPC () {25;}' unless defined(&R_ARM_GOTPC);
    eval 'sub R_ARM_GOT32 () {26;}' unless defined(&R_ARM_GOT32);
    eval 'sub R_ARM_PLT32 () {27;}' unless defined(&R_ARM_PLT32);
    eval 'sub R_ARM_GNU_VTENTRY () {100;}' unless defined(&R_ARM_GNU_VTENTRY);
    eval 'sub R_ARM_GNU_VTINHERIT () {101;}' unless defined(&R_ARM_GNU_VTINHERIT);
    eval 'sub R_ARM_RSBREL32 () {250;}' unless defined(&R_ARM_RSBREL32);
    eval 'sub R_ARM_THM_RPC22 () {251;}' unless defined(&R_ARM_THM_RPC22);
    eval 'sub R_ARM_RREL32 () {252;}' unless defined(&R_ARM_RREL32);
    eval 'sub R_ARM_RABS32 () {253;}' unless defined(&R_ARM_RABS32);
    eval 'sub R_ARM_RPC24 () {254;}' unless defined(&R_ARM_RPC24);
    eval 'sub R_ARM_RBASE () {255;}' unless defined(&R_ARM_RBASE);
    eval 'sub R_IA_64_NONE () {0;}' unless defined(&R_IA_64_NONE);
    eval 'sub R_IA_64_IMM14 () {0x21;}' unless defined(&R_IA_64_IMM14);
    eval 'sub R_IA_64_IMM22 () {0x22;}' unless defined(&R_IA_64_IMM22);
    eval 'sub R_IA_64_IMM64 () {0x23;}' unless defined(&R_IA_64_IMM64);
    eval 'sub R_IA_64_DIR32MSB () {0x24;}' unless defined(&R_IA_64_DIR32MSB);
    eval 'sub R_IA_64_DIR32LSB () {0x25;}' unless defined(&R_IA_64_DIR32LSB);
    eval 'sub R_IA_64_DIR64MSB () {0x26;}' unless defined(&R_IA_64_DIR64MSB);
    eval 'sub R_IA_64_DIR64LSB () {0x27;}' unless defined(&R_IA_64_DIR64LSB);
    eval 'sub R_IA_64_GPREL22 () {0x2a;}' unless defined(&R_IA_64_GPREL22);
    eval 'sub R_IA_64_GPREL64I () {0x2b;}' unless defined(&R_IA_64_GPREL64I);
    eval 'sub R_IA_64_GPREL32MSB () {0x2c;}' unless defined(&R_IA_64_GPREL32MSB);
    eval 'sub R_IA_64_GPREL32LSB () {0x2d;}' unless defined(&R_IA_64_GPREL32LSB);
    eval 'sub R_IA_64_GPREL64MSB () {0x2e;}' unless defined(&R_IA_64_GPREL64MSB);
    eval 'sub R_IA_64_GPREL64LSB () {0x2f;}' unless defined(&R_IA_64_GPREL64LSB);
    eval 'sub R_IA_64_LTOFF22 () {0x32;}' unless defined(&R_IA_64_LTOFF22);
    eval 'sub R_IA_64_LTOFF64I () {0x33;}' unless defined(&R_IA_64_LTOFF64I);
    eval 'sub R_IA_64_PLTOFF22 () {0x3a;}' unless defined(&R_IA_64_PLTOFF22);
    eval 'sub R_IA_64_PLTOFF64I () {0x3b;}' unless defined(&R_IA_64_PLTOFF64I);
    eval 'sub R_IA_64_PLTOFF64MSB () {0x3e;}' unless defined(&R_IA_64_PLTOFF64MSB);
    eval 'sub R_IA_64_PLTOFF64LSB () {0x3f;}' unless defined(&R_IA_64_PLTOFF64LSB);
    eval 'sub R_IA_64_FPTR64I () {0x43;}' unless defined(&R_IA_64_FPTR64I);
    eval 'sub R_IA_64_FPTR32MSB () {0x44;}' unless defined(&R_IA_64_FPTR32MSB);
    eval 'sub R_IA_64_FPTR32LSB () {0x45;}' unless defined(&R_IA_64_FPTR32LSB);
    eval 'sub R_IA_64_FPTR64MSB () {0x46;}' unless defined(&R_IA_64_FPTR64MSB);
    eval 'sub R_IA_64_FPTR64LSB () {0x47;}' unless defined(&R_IA_64_FPTR64LSB);
    eval 'sub R_IA_64_PCREL60B () {0x48;}' unless defined(&R_IA_64_PCREL60B);
    eval 'sub R_IA_64_PCREL21B () {0x49;}' unless defined(&R_IA_64_PCREL21B);
    eval 'sub R_IA_64_PCREL21M () {0x4a;}' unless defined(&R_IA_64_PCREL21M);
    eval 'sub R_IA_64_PCREL21F () {0x4b;}' unless defined(&R_IA_64_PCREL21F);
    eval 'sub R_IA_64_PCREL32MSB () {0x4c;}' unless defined(&R_IA_64_PCREL32MSB);
    eval 'sub R_IA_64_PCREL32LSB () {0x4d;}' unless defined(&R_IA_64_PCREL32LSB);
    eval 'sub R_IA_64_PCREL64MSB () {0x4e;}' unless defined(&R_IA_64_PCREL64MSB);
    eval 'sub R_IA_64_PCREL64LSB () {0x4f;}' unless defined(&R_IA_64_PCREL64LSB);
    eval 'sub R_IA_64_LTOFF_FPTR22 () {0x52;}' unless defined(&R_IA_64_LTOFF_FPTR22);
    eval 'sub R_IA_64_LTOFF_FPTR64I () {0x53;}' unless defined(&R_IA_64_LTOFF_FPTR64I);
    eval 'sub R_IA_64_LTOFF_FPTR32MSB () {0x54;}' unless defined(&R_IA_64_LTOFF_FPTR32MSB);
    eval 'sub R_IA_64_LTOFF_FPTR32LSB () {0x55;}' unless defined(&R_IA_64_LTOFF_FPTR32LSB);
    eval 'sub R_IA_64_LTOFF_FPTR64MSB () {0x56;}' unless defined(&R_IA_64_LTOFF_FPTR64MSB);
    eval 'sub R_IA_64_LTOFF_FPTR64LSB () {0x57;}' unless defined(&R_IA_64_LTOFF_FPTR64LSB);
    eval 'sub R_IA_64_SEGREL32MSB () {0x5c;}' unless defined(&R_IA_64_SEGREL32MSB);
    eval 'sub R_IA_64_SEGREL32LSB () {0x5d;}' unless defined(&R_IA_64_SEGREL32LSB);
    eval 'sub R_IA_64_SEGREL64MSB () {0x5e;}' unless defined(&R_IA_64_SEGREL64MSB);
    eval 'sub R_IA_64_SEGREL64LSB () {0x5f;}' unless defined(&R_IA_64_SEGREL64LSB);
    eval 'sub R_IA_64_SECREL32MSB () {0x64;}' unless defined(&R_IA_64_SECREL32MSB);
    eval 'sub R_IA_64_SECREL32LSB () {0x65;}' unless defined(&R_IA_64_SECREL32LSB);
    eval 'sub R_IA_64_SECREL64MSB () {0x66;}' unless defined(&R_IA_64_SECREL64MSB);
    eval 'sub R_IA_64_SECREL64LSB () {0x67;}' unless defined(&R_IA_64_SECREL64LSB);
    eval 'sub R_IA_64_REL32MSB () {0x6c;}' unless defined(&R_IA_64_REL32MSB);
    eval 'sub R_IA_64_REL32LSB () {0x6d;}' unless defined(&R_IA_64_REL32LSB);
    eval 'sub R_IA_64_REL64MSB () {0x6e;}' unless defined(&R_IA_64_REL64MSB);
    eval 'sub R_IA_64_REL64LSB () {0x6f;}' unless defined(&R_IA_64_REL64LSB);
    eval 'sub R_IA_64_LTV32MSB () {0x74;}' unless defined(&R_IA_64_LTV32MSB);
    eval 'sub R_IA_64_LTV32LSB () {0x75;}' unless defined(&R_IA_64_LTV32LSB);
    eval 'sub R_IA_64_LTV64MSB () {0x76;}' unless defined(&R_IA_64_LTV64MSB);
    eval 'sub R_IA_64_LTV64LSB () {0x77;}' unless defined(&R_IA_64_LTV64LSB);
    eval 'sub R_IA_64_PCREL21BI () {0x79;}' unless defined(&R_IA_64_PCREL21BI);
    eval 'sub R_IA_64_PCREL22 () {0x7a;}' unless defined(&R_IA_64_PCREL22);
    eval 'sub R_IA_64_PCREL64I () {0x7b;}' unless defined(&R_IA_64_PCREL64I);
    eval 'sub R_IA_64_IPLTMSB () {0x80;}' unless defined(&R_IA_64_IPLTMSB);
    eval 'sub R_IA_64_IPLTLSB () {0x81;}' unless defined(&R_IA_64_IPLTLSB);
    eval 'sub R_IA_64_SUB () {0x85;}' unless defined(&R_IA_64_SUB);
    eval 'sub R_IA_64_LTOFF22X () {0x86;}' unless defined(&R_IA_64_LTOFF22X);
    eval 'sub R_IA_64_LDXMOV () {0x87;}' unless defined(&R_IA_64_LDXMOV);
    eval 'sub R_IA_64_TPREL14 () {0x91;}' unless defined(&R_IA_64_TPREL14);
    eval 'sub R_IA_64_TPREL22 () {0x92;}' unless defined(&R_IA_64_TPREL22);
    eval 'sub R_IA_64_TPREL64I () {0x93;}' unless defined(&R_IA_64_TPREL64I);
    eval 'sub R_IA_64_TPREL64MSB () {0x96;}' unless defined(&R_IA_64_TPREL64MSB);
    eval 'sub R_IA_64_TPREL64LSB () {0x97;}' unless defined(&R_IA_64_TPREL64LSB);
    eval 'sub R_IA_64_LTOFF_TPREL22 () {0x9a;}' unless defined(&R_IA_64_LTOFF_TPREL22);
    eval 'sub R_IA_64_DTPMOD64MSB () {0xa6;}' unless defined(&R_IA_64_DTPMOD64MSB);
    eval 'sub R_IA_64_DTPMOD64LSB () {0xa7;}' unless defined(&R_IA_64_DTPMOD64LSB);
    eval 'sub R_IA_64_LTOFF_DTPMOD22 () {0xaa;}' unless defined(&R_IA_64_LTOFF_DTPMOD22);
    eval 'sub R_IA_64_DTPREL14 () {0xb1;}' unless defined(&R_IA_64_DTPREL14);
    eval 'sub R_IA_64_DTPREL22 () {0xb2;}' unless defined(&R_IA_64_DTPREL22);
    eval 'sub R_IA_64_DTPREL64I () {0xb3;}' unless defined(&R_IA_64_DTPREL64I);
    eval 'sub R_IA_64_DTPREL32MSB () {0xb4;}' unless defined(&R_IA_64_DTPREL32MSB);
    eval 'sub R_IA_64_DTPREL32LSB () {0xb5;}' unless defined(&R_IA_64_DTPREL32LSB);
    eval 'sub R_IA_64_DTPREL64MSB () {0xb6;}' unless defined(&R_IA_64_DTPREL64MSB);
    eval 'sub R_IA_64_DTPREL64LSB () {0xb7;}' unless defined(&R_IA_64_DTPREL64LSB);
    eval 'sub R_IA_64_LTOFF_DTPREL22 () {0xba;}' unless defined(&R_IA_64_LTOFF_DTPREL22);
    eval 'sub R_MIPS_NONE () {0;}' unless defined(&R_MIPS_NONE);
    eval 'sub R_MIPS_16 () {1;}' unless defined(&R_MIPS_16);
    eval 'sub R_MIPS_32 () {2;}' unless defined(&R_MIPS_32);
    eval 'sub R_MIPS_REL32 () {3;}' unless defined(&R_MIPS_REL32);
    eval 'sub R_MIPS_26 () {4;}' unless defined(&R_MIPS_26);
    eval 'sub R_MIPS_HI16 () {5;}' unless defined(&R_MIPS_HI16);
    eval 'sub R_MIPS_LO16 () {6;}' unless defined(&R_MIPS_LO16);
    eval 'sub R_MIPS_GPREL16 () {7;}' unless defined(&R_MIPS_GPREL16);
    eval 'sub R_MIPS_LITERAL () {8;}' unless defined(&R_MIPS_LITERAL);
    eval 'sub R_MIPS_GOT16 () {9;}' unless defined(&R_MIPS_GOT16);
    eval 'sub R_MIPS_PC16 () {10;}' unless defined(&R_MIPS_PC16);
    eval 'sub R_MIPS_CALL16 () {11;}' unless defined(&R_MIPS_CALL16);
    eval 'sub R_MIPS_GPREL32 () {12;}' unless defined(&R_MIPS_GPREL32);
    eval 'sub R_MIPS_GOTHI16 () {21;}' unless defined(&R_MIPS_GOTHI16);
    eval 'sub R_MIPS_GOTLO16 () {22;}' unless defined(&R_MIPS_GOTLO16);
    eval 'sub R_MIPS_CALLHI16 () {30;}' unless defined(&R_MIPS_CALLHI16);
    eval 'sub R_MIPS_CALLLO16 () {31;}' unless defined(&R_MIPS_CALLLO16);
    eval 'sub R_PPC_NONE () {0;}' unless defined(&R_PPC_NONE);
    eval 'sub R_PPC_ADDR32 () {1;}' unless defined(&R_PPC_ADDR32);
    eval 'sub R_PPC_ADDR24 () {2;}' unless defined(&R_PPC_ADDR24);
    eval 'sub R_PPC_ADDR16 () {3;}' unless defined(&R_PPC_ADDR16);
    eval 'sub R_PPC_ADDR16_LO () {4;}' unless defined(&R_PPC_ADDR16_LO);
    eval 'sub R_PPC_ADDR16_HI () {5;}' unless defined(&R_PPC_ADDR16_HI);
    eval 'sub R_PPC_ADDR16_HA () {6;}' unless defined(&R_PPC_ADDR16_HA);
    eval 'sub R_PPC_ADDR14 () {7;}' unless defined(&R_PPC_ADDR14);
    eval 'sub R_PPC_ADDR14_BRTAKEN () {8;}' unless defined(&R_PPC_ADDR14_BRTAKEN);
    eval 'sub R_PPC_ADDR14_BRNTAKEN () {9;}' unless defined(&R_PPC_ADDR14_BRNTAKEN);
    eval 'sub R_PPC_REL24 () {10;}' unless defined(&R_PPC_REL24);
    eval 'sub R_PPC_REL14 () {11;}' unless defined(&R_PPC_REL14);
    eval 'sub R_PPC_REL14_BRTAKEN () {12;}' unless defined(&R_PPC_REL14_BRTAKEN);
    eval 'sub R_PPC_REL14_BRNTAKEN () {13;}' unless defined(&R_PPC_REL14_BRNTAKEN);
    eval 'sub R_PPC_GOT16 () {14;}' unless defined(&R_PPC_GOT16);
    eval 'sub R_PPC_GOT16_LO () {15;}' unless defined(&R_PPC_GOT16_LO);
    eval 'sub R_PPC_GOT16_HI () {16;}' unless defined(&R_PPC_GOT16_HI);
    eval 'sub R_PPC_GOT16_HA () {17;}' unless defined(&R_PPC_GOT16_HA);
    eval 'sub R_PPC_PLTREL24 () {18;}' unless defined(&R_PPC_PLTREL24);
    eval 'sub R_PPC_COPY () {19;}' unless defined(&R_PPC_COPY);
    eval 'sub R_PPC_GLOB_DAT () {20;}' unless defined(&R_PPC_GLOB_DAT);
    eval 'sub R_PPC_JMP_SLOT () {21;}' unless defined(&R_PPC_JMP_SLOT);
    eval 'sub R_PPC_RELATIVE () {22;}' unless defined(&R_PPC_RELATIVE);
    eval 'sub R_PPC_LOCAL24PC () {23;}' unless defined(&R_PPC_LOCAL24PC);
    eval 'sub R_PPC_UADDR32 () {24;}' unless defined(&R_PPC_UADDR32);
    eval 'sub R_PPC_UADDR16 () {25;}' unless defined(&R_PPC_UADDR16);
    eval 'sub R_PPC_REL32 () {26;}' unless defined(&R_PPC_REL32);
    eval 'sub R_PPC_PLT32 () {27;}' unless defined(&R_PPC_PLT32);
    eval 'sub R_PPC_PLTREL32 () {28;}' unless defined(&R_PPC_PLTREL32);
    eval 'sub R_PPC_PLT16_LO () {29;}' unless defined(&R_PPC_PLT16_LO);
    eval 'sub R_PPC_PLT16_HI () {30;}' unless defined(&R_PPC_PLT16_HI);
    eval 'sub R_PPC_PLT16_HA () {31;}' unless defined(&R_PPC_PLT16_HA);
    eval 'sub R_PPC_SDAREL16 () {32;}' unless defined(&R_PPC_SDAREL16);
    eval 'sub R_PPC_SECTOFF () {33;}' unless defined(&R_PPC_SECTOFF);
    eval 'sub R_PPC_SECTOFF_LO () {34;}' unless defined(&R_PPC_SECTOFF_LO);
    eval 'sub R_PPC_SECTOFF_HI () {35;}' unless defined(&R_PPC_SECTOFF_HI);
    eval 'sub R_PPC_SECTOFF_HA () {36;}' unless defined(&R_PPC_SECTOFF_HA);
    eval 'sub R_PPC64_ADDR64 () {38;}' unless defined(&R_PPC64_ADDR64);
    eval 'sub R_PPC64_ADDR16_HIGHER () {39;}' unless defined(&R_PPC64_ADDR16_HIGHER);
    eval 'sub R_PPC64_ADDR16_HIGHERA () {40;}' unless defined(&R_PPC64_ADDR16_HIGHERA);
    eval 'sub R_PPC64_ADDR16_HIGHEST () {41;}' unless defined(&R_PPC64_ADDR16_HIGHEST);
    eval 'sub R_PPC64_ADDR16_HIGHESTA () {42;}' unless defined(&R_PPC64_ADDR16_HIGHESTA);
    eval 'sub R_PPC64_UADDR64 () {43;}' unless defined(&R_PPC64_UADDR64);
    eval 'sub R_PPC64_REL64 () {44;}' unless defined(&R_PPC64_REL64);
    eval 'sub R_PPC64_PLT64 () {45;}' unless defined(&R_PPC64_PLT64);
    eval 'sub R_PPC64_PLTREL64 () {46;}' unless defined(&R_PPC64_PLTREL64);
    eval 'sub R_PPC64_TOC16 () {47;}' unless defined(&R_PPC64_TOC16);
    eval 'sub R_PPC64_TOC16_LO () {48;}' unless defined(&R_PPC64_TOC16_LO);
    eval 'sub R_PPC64_TOC16_HI () {49;}' unless defined(&R_PPC64_TOC16_HI);
    eval 'sub R_PPC64_TOC16_HA () {50;}' unless defined(&R_PPC64_TOC16_HA);
    eval 'sub R_PPC64_TOC () {51;}' unless defined(&R_PPC64_TOC);
    eval 'sub R_PPC64_DTPMOD64 () {68;}' unless defined(&R_PPC64_DTPMOD64);
    eval 'sub R_PPC64_TPREL64 () {73;}' unless defined(&R_PPC64_TPREL64);
    eval 'sub R_PPC64_DTPREL64 () {78;}' unless defined(&R_PPC64_DTPREL64);
    eval 'sub R_PPC_TLS () {67;}' unless defined(&R_PPC_TLS);
    eval 'sub R_PPC_DTPMOD32 () {68;}' unless defined(&R_PPC_DTPMOD32);
    eval 'sub R_PPC_TPREL16 () {69;}' unless defined(&R_PPC_TPREL16);
    eval 'sub R_PPC_TPREL16_LO () {70;}' unless defined(&R_PPC_TPREL16_LO);
    eval 'sub R_PPC_TPREL16_HI () {71;}' unless defined(&R_PPC_TPREL16_HI);
    eval 'sub R_PPC_TPREL16_HA () {72;}' unless defined(&R_PPC_TPREL16_HA);
    eval 'sub R_PPC_TPREL32 () {73;}' unless defined(&R_PPC_TPREL32);
    eval 'sub R_PPC_DTPREL16 () {74;}' unless defined(&R_PPC_DTPREL16);
    eval 'sub R_PPC_DTPREL16_LO () {75;}' unless defined(&R_PPC_DTPREL16_LO);
    eval 'sub R_PPC_DTPREL16_HI () {76;}' unless defined(&R_PPC_DTPREL16_HI);
    eval 'sub R_PPC_DTPREL16_HA () {77;}' unless defined(&R_PPC_DTPREL16_HA);
    eval 'sub R_PPC_DTPREL32 () {78;}' unless defined(&R_PPC_DTPREL32);
    eval 'sub R_PPC_GOT_TLSGD16 () {79;}' unless defined(&R_PPC_GOT_TLSGD16);
    eval 'sub R_PPC_GOT_TLSGD16_LO () {80;}' unless defined(&R_PPC_GOT_TLSGD16_LO);
    eval 'sub R_PPC_GOT_TLSGD16_HI () {81;}' unless defined(&R_PPC_GOT_TLSGD16_HI);
    eval 'sub R_PPC_GOT_TLSGD16_HA () {82;}' unless defined(&R_PPC_GOT_TLSGD16_HA);
    eval 'sub R_PPC_GOT_TLSLD16 () {83;}' unless defined(&R_PPC_GOT_TLSLD16);
    eval 'sub R_PPC_GOT_TLSLD16_LO () {84;}' unless defined(&R_PPC_GOT_TLSLD16_LO);
    eval 'sub R_PPC_GOT_TLSLD16_HI () {85;}' unless defined(&R_PPC_GOT_TLSLD16_HI);
    eval 'sub R_PPC_GOT_TLSLD16_HA () {86;}' unless defined(&R_PPC_GOT_TLSLD16_HA);
    eval 'sub R_PPC_GOT_TPREL16 () {87;}' unless defined(&R_PPC_GOT_TPREL16);
    eval 'sub R_PPC_GOT_TPREL16_LO () {88;}' unless defined(&R_PPC_GOT_TPREL16_LO);
    eval 'sub R_PPC_GOT_TPREL16_HI () {89;}' unless defined(&R_PPC_GOT_TPREL16_HI);
    eval 'sub R_PPC_GOT_TPREL16_HA () {90;}' unless defined(&R_PPC_GOT_TPREL16_HA);
    eval 'sub R_PPC_EMB_NADDR32 () {101;}' unless defined(&R_PPC_EMB_NADDR32);
    eval 'sub R_PPC_EMB_NADDR16 () {102;}' unless defined(&R_PPC_EMB_NADDR16);
    eval 'sub R_PPC_EMB_NADDR16_LO () {103;}' unless defined(&R_PPC_EMB_NADDR16_LO);
    eval 'sub R_PPC_EMB_NADDR16_HI () {104;}' unless defined(&R_PPC_EMB_NADDR16_HI);
    eval 'sub R_PPC_EMB_NADDR16_HA () {105;}' unless defined(&R_PPC_EMB_NADDR16_HA);
    eval 'sub R_PPC_EMB_SDAI16 () {106;}' unless defined(&R_PPC_EMB_SDAI16);
    eval 'sub R_PPC_EMB_SDA2I16 () {107;}' unless defined(&R_PPC_EMB_SDA2I16);
    eval 'sub R_PPC_EMB_SDA2REL () {108;}' unless defined(&R_PPC_EMB_SDA2REL);
    eval 'sub R_PPC_EMB_SDA21 () {109;}' unless defined(&R_PPC_EMB_SDA21);
    eval 'sub R_PPC_EMB_MRKREF () {110;}' unless defined(&R_PPC_EMB_MRKREF);
    eval 'sub R_PPC_EMB_RELSEC16 () {111;}' unless defined(&R_PPC_EMB_RELSEC16);
    eval 'sub R_PPC_EMB_RELST_LO () {112;}' unless defined(&R_PPC_EMB_RELST_LO);
    eval 'sub R_PPC_EMB_RELST_HI () {113;}' unless defined(&R_PPC_EMB_RELST_HI);
    eval 'sub R_PPC_EMB_RELST_HA () {114;}' unless defined(&R_PPC_EMB_RELST_HA);
    eval 'sub R_PPC_EMB_BIT_FLD () {115;}' unless defined(&R_PPC_EMB_BIT_FLD);
    eval 'sub R_PPC_EMB_RELSDA () {116;}' unless defined(&R_PPC_EMB_RELSDA);
    eval 'sub R_SPARC_NONE () {0;}' unless defined(&R_SPARC_NONE);
    eval 'sub R_SPARC_8 () {1;}' unless defined(&R_SPARC_8);
    eval 'sub R_SPARC_16 () {2;}' unless defined(&R_SPARC_16);
    eval 'sub R_SPARC_32 () {3;}' unless defined(&R_SPARC_32);
    eval 'sub R_SPARC_DISP8 () {4;}' unless defined(&R_SPARC_DISP8);
    eval 'sub R_SPARC_DISP16 () {5;}' unless defined(&R_SPARC_DISP16);
    eval 'sub R_SPARC_DISP32 () {6;}' unless defined(&R_SPARC_DISP32);
    eval 'sub R_SPARC_WDISP30 () {7;}' unless defined(&R_SPARC_WDISP30);
    eval 'sub R_SPARC_WDISP22 () {8;}' unless defined(&R_SPARC_WDISP22);
    eval 'sub R_SPARC_HI22 () {9;}' unless defined(&R_SPARC_HI22);
    eval 'sub R_SPARC_22 () {10;}' unless defined(&R_SPARC_22);
    eval 'sub R_SPARC_13 () {11;}' unless defined(&R_SPARC_13);
    eval 'sub R_SPARC_LO10 () {12;}' unless defined(&R_SPARC_LO10);
    eval 'sub R_SPARC_GOT10 () {13;}' unless defined(&R_SPARC_GOT10);
    eval 'sub R_SPARC_GOT13 () {14;}' unless defined(&R_SPARC_GOT13);
    eval 'sub R_SPARC_GOT22 () {15;}' unless defined(&R_SPARC_GOT22);
    eval 'sub R_SPARC_PC10 () {16;}' unless defined(&R_SPARC_PC10);
    eval 'sub R_SPARC_PC22 () {17;}' unless defined(&R_SPARC_PC22);
    eval 'sub R_SPARC_WPLT30 () {18;}' unless defined(&R_SPARC_WPLT30);
    eval 'sub R_SPARC_COPY () {19;}' unless defined(&R_SPARC_COPY);
    eval 'sub R_SPARC_GLOB_DAT () {20;}' unless defined(&R_SPARC_GLOB_DAT);
    eval 'sub R_SPARC_JMP_SLOT () {21;}' unless defined(&R_SPARC_JMP_SLOT);
    eval 'sub R_SPARC_RELATIVE () {22;}' unless defined(&R_SPARC_RELATIVE);
    eval 'sub R_SPARC_UA32 () {23;}' unless defined(&R_SPARC_UA32);
    eval 'sub R_SPARC_PLT32 () {24;}' unless defined(&R_SPARC_PLT32);
    eval 'sub R_SPARC_HIPLT22 () {25;}' unless defined(&R_SPARC_HIPLT22);
    eval 'sub R_SPARC_LOPLT10 () {26;}' unless defined(&R_SPARC_LOPLT10);
    eval 'sub R_SPARC_PCPLT32 () {27;}' unless defined(&R_SPARC_PCPLT32);
    eval 'sub R_SPARC_PCPLT22 () {28;}' unless defined(&R_SPARC_PCPLT22);
    eval 'sub R_SPARC_PCPLT10 () {29;}' unless defined(&R_SPARC_PCPLT10);
    eval 'sub R_SPARC_10 () {30;}' unless defined(&R_SPARC_10);
    eval 'sub R_SPARC_11 () {31;}' unless defined(&R_SPARC_11);
    eval 'sub R_SPARC_64 () {32;}' unless defined(&R_SPARC_64);
    eval 'sub R_SPARC_OLO10 () {33;}' unless defined(&R_SPARC_OLO10);
    eval 'sub R_SPARC_HH22 () {34;}' unless defined(&R_SPARC_HH22);
    eval 'sub R_SPARC_HM10 () {35;}' unless defined(&R_SPARC_HM10);
    eval 'sub R_SPARC_LM22 () {36;}' unless defined(&R_SPARC_LM22);
    eval 'sub R_SPARC_PC_HH22 () {37;}' unless defined(&R_SPARC_PC_HH22);
    eval 'sub R_SPARC_PC_HM10 () {38;}' unless defined(&R_SPARC_PC_HM10);
    eval 'sub R_SPARC_PC_LM22 () {39;}' unless defined(&R_SPARC_PC_LM22);
    eval 'sub R_SPARC_WDISP16 () {40;}' unless defined(&R_SPARC_WDISP16);
    eval 'sub R_SPARC_WDISP19 () {41;}' unless defined(&R_SPARC_WDISP19);
    eval 'sub R_SPARC_GLOB_JMP () {42;}' unless defined(&R_SPARC_GLOB_JMP);
    eval 'sub R_SPARC_7 () {43;}' unless defined(&R_SPARC_7);
    eval 'sub R_SPARC_5 () {44;}' unless defined(&R_SPARC_5);
    eval 'sub R_SPARC_6 () {45;}' unless defined(&R_SPARC_6);
    eval 'sub R_SPARC_DISP64 () {46;}' unless defined(&R_SPARC_DISP64);
    eval 'sub R_SPARC_PLT64 () {47;}' unless defined(&R_SPARC_PLT64);
    eval 'sub R_SPARC_HIX22 () {48;}' unless defined(&R_SPARC_HIX22);
    eval 'sub R_SPARC_LOX10 () {49;}' unless defined(&R_SPARC_LOX10);
    eval 'sub R_SPARC_H44 () {50;}' unless defined(&R_SPARC_H44);
    eval 'sub R_SPARC_M44 () {51;}' unless defined(&R_SPARC_M44);
    eval 'sub R_SPARC_L44 () {52;}' unless defined(&R_SPARC_L44);
    eval 'sub R_SPARC_REGISTER () {53;}' unless defined(&R_SPARC_REGISTER);
    eval 'sub R_SPARC_UA64 () {54;}' unless defined(&R_SPARC_UA64);
    eval 'sub R_SPARC_UA16 () {55;}' unless defined(&R_SPARC_UA16);
    eval 'sub R_SPARC_TLS_GD_HI22 () {56;}' unless defined(&R_SPARC_TLS_GD_HI22);
    eval 'sub R_SPARC_TLS_GD_LO10 () {57;}' unless defined(&R_SPARC_TLS_GD_LO10);
    eval 'sub R_SPARC_TLS_GD_ADD () {58;}' unless defined(&R_SPARC_TLS_GD_ADD);
    eval 'sub R_SPARC_TLS_GD_CALL () {59;}' unless defined(&R_SPARC_TLS_GD_CALL);
    eval 'sub R_SPARC_TLS_LDM_HI22 () {60;}' unless defined(&R_SPARC_TLS_LDM_HI22);
    eval 'sub R_SPARC_TLS_LDM_LO10 () {61;}' unless defined(&R_SPARC_TLS_LDM_LO10);
    eval 'sub R_SPARC_TLS_LDM_ADD () {62;}' unless defined(&R_SPARC_TLS_LDM_ADD);
    eval 'sub R_SPARC_TLS_LDM_CALL () {63;}' unless defined(&R_SPARC_TLS_LDM_CALL);
    eval 'sub R_SPARC_TLS_LDO_HIX22 () {64;}' unless defined(&R_SPARC_TLS_LDO_HIX22);
    eval 'sub R_SPARC_TLS_LDO_LOX10 () {65;}' unless defined(&R_SPARC_TLS_LDO_LOX10);
    eval 'sub R_SPARC_TLS_LDO_ADD () {66;}' unless defined(&R_SPARC_TLS_LDO_ADD);
    eval 'sub R_SPARC_TLS_IE_HI22 () {67;}' unless defined(&R_SPARC_TLS_IE_HI22);
    eval 'sub R_SPARC_TLS_IE_LO10 () {68;}' unless defined(&R_SPARC_TLS_IE_LO10);
    eval 'sub R_SPARC_TLS_IE_LD () {69;}' unless defined(&R_SPARC_TLS_IE_LD);
    eval 'sub R_SPARC_TLS_IE_LDX () {70;}' unless defined(&R_SPARC_TLS_IE_LDX);
    eval 'sub R_SPARC_TLS_IE_ADD () {71;}' unless defined(&R_SPARC_TLS_IE_ADD);
    eval 'sub R_SPARC_TLS_LE_HIX22 () {72;}' unless defined(&R_SPARC_TLS_LE_HIX22);
    eval 'sub R_SPARC_TLS_LE_LOX10 () {73;}' unless defined(&R_SPARC_TLS_LE_LOX10);
    eval 'sub R_SPARC_TLS_DTPMOD32 () {74;}' unless defined(&R_SPARC_TLS_DTPMOD32);
    eval 'sub R_SPARC_TLS_DTPMOD64 () {75;}' unless defined(&R_SPARC_TLS_DTPMOD64);
    eval 'sub R_SPARC_TLS_DTPOFF32 () {76;}' unless defined(&R_SPARC_TLS_DTPOFF32);
    eval 'sub R_SPARC_TLS_DTPOFF64 () {77;}' unless defined(&R_SPARC_TLS_DTPOFF64);
    eval 'sub R_SPARC_TLS_TPOFF32 () {78;}' unless defined(&R_SPARC_TLS_TPOFF32);
    eval 'sub R_SPARC_TLS_TPOFF64 () {79;}' unless defined(&R_SPARC_TLS_TPOFF64);
    eval 'sub R_X86_64_NONE () {0;}' unless defined(&R_X86_64_NONE);
    eval 'sub R_X86_64_64 () {1;}' unless defined(&R_X86_64_64);
    eval 'sub R_X86_64_PC32 () {2;}' unless defined(&R_X86_64_PC32);
    eval 'sub R_X86_64_GOT32 () {3;}' unless defined(&R_X86_64_GOT32);
    eval 'sub R_X86_64_PLT32 () {4;}' unless defined(&R_X86_64_PLT32);
    eval 'sub R_X86_64_COPY () {5;}' unless defined(&R_X86_64_COPY);
    eval 'sub R_X86_64_GLOB_DAT () {6;}' unless defined(&R_X86_64_GLOB_DAT);
    eval 'sub R_X86_64_JMP_SLOT () {7;}' unless defined(&R_X86_64_JMP_SLOT);
    eval 'sub R_X86_64_RELATIVE () {8;}' unless defined(&R_X86_64_RELATIVE);
    eval 'sub R_X86_64_GOTPCREL () {9;}' unless defined(&R_X86_64_GOTPCREL);
    eval 'sub R_X86_64_32 () {10;}' unless defined(&R_X86_64_32);
    eval 'sub R_X86_64_32S () {11;}' unless defined(&R_X86_64_32S);
    eval 'sub R_X86_64_16 () {12;}' unless defined(&R_X86_64_16);
    eval 'sub R_X86_64_PC16 () {13;}' unless defined(&R_X86_64_PC16);
    eval 'sub R_X86_64_8 () {14;}' unless defined(&R_X86_64_8);
    eval 'sub R_X86_64_PC8 () {15;}' unless defined(&R_X86_64_PC8);
    eval 'sub R_X86_64_DTPMOD64 () {16;}' unless defined(&R_X86_64_DTPMOD64);
    eval 'sub R_X86_64_DTPOFF64 () {17;}' unless defined(&R_X86_64_DTPOFF64);
    eval 'sub R_X86_64_TPOFF64 () {18;}' unless defined(&R_X86_64_TPOFF64);
    eval 'sub R_X86_64_TLSGD () {19;}' unless defined(&R_X86_64_TLSGD);
    eval 'sub R_X86_64_TLSLD () {20;}' unless defined(&R_X86_64_TLSLD);
    eval 'sub R_X86_64_DTPOFF32 () {21;}' unless defined(&R_X86_64_DTPOFF32);
    eval 'sub R_X86_64_GOTTPOFF () {22;}' unless defined(&R_X86_64_GOTTPOFF);
    eval 'sub R_X86_64_TPOFF32 () {23;}' unless defined(&R_X86_64_TPOFF32);
    eval 'sub R_X86_64_IRELATIVE () {37;}' unless defined(&R_X86_64_IRELATIVE);
}
1;
